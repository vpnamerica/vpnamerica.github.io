<!doctype html>
<html xml:lang="zh-CN" lang="zh-CN">

<head>
        <link rel="canonical" href="https://vpnamerica.github.io/news/article-100840.htm" />
    <!-- Required meta tags -->
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
    <title>java自带的四种线程池</title>
        <meta name="description" content="java预定义的哪四种线程池？  newSingleThreadExexcutor：单线程数的线程池（核心线程数=最大线程数=1） newFixedThreadPool：固定线程数的线程池（核心线程数" />
        <link rel="icon" href="/assets/website/img/clashforios/favicon.ico" type="image/x-icon"/>

    <meta name="author" content="VPN美国 节点官网">
    <meta property="og:type" content="article" />
    <meta property="og:url" content="https://vpnamerica.github.io/news/article-100840.htm" />
    <meta property="og:site_name" content="VPN美国 节点官网" />
    <meta property="og:title" content="java自带的四种线程池" />
    <meta property="og:image" content="https://vpnamerica.github.io/uploads/20240922-1/2847c9095b9bf0532495525f70075bc6.webp" />
        <meta property="og:release_date" content="2025-04-21T06:52:23" />
    <meta property="og:updated_time" content="2025-04-21T06:52:23" />
        <meta property="og:description" content="java预定义的哪四种线程池？  newSingleThreadExexcutor：单线程数的线程池（核心线程数=最大线程数=1） newFixedThreadPool：固定线程数的线程池（核心线程数" />
        
    <meta name="applicable-device" content="pc,mobile" />
    <meta name="renderer" content="webkit" />
    <meta name="force-rendering" content="webkit" />
    <meta http-equiv="Cache-Control" content="no-transform" />
    <meta name="robots" content="max-image-preview:large" />
    <meta name="apple-mobile-web-app-capable" content="yes">
    <meta name="apple-mobile-web-app-status-bar-style" content="black">
    <meta name="apple-mobile-web-app-title" content="java自带的四种线程池">
    <meta name="format-detection" content="telephone=no">

    <link rel="dns-prefetch" href="https:/www.googletagmanager.com">
    <link rel="dns-prefetch" href="https://www.googleadservices.com">
    <link rel="dns-prefetch" href="https://www.google-analytics.com">
    <link rel="dns-prefetch" href="https://pagead2.googlesyndication.com">
    <link rel="dns-prefetch" href="https://cm.g.doubleclick.net">
    <link rel="dns-prefetch" href="https://fonts.googleapis.com">
    
    <!-- Bootstrap CSS -->
    <link rel="stylesheet" href="/assets/website/css/clashforios/bootstrap.min.css">
    <!-- Slick Silder CSS -->
    <link rel="stylesheet" href="/assets/website/css/clashforios/slick.css">
    <!-- Fontawesome CSS -->
    <link rel="stylesheet" href="/assets/website/css/clashforios/fontawesome.css">
    <!-- Flaticon CSS -->
    <link rel="stylesheet" href="/assets/website/css/clashforios/style.css">
    <!-- Theme Element CSS -->
    <link rel="stylesheet" href="/assets/website/css/clashforios/responsivemenu.css">
    <!-- Theme Element CSS -->
    <link rel="stylesheet" href="/assets/website/css/clashforios/elements.css">
    <!-- Color CSS -->
    <link rel="stylesheet" href="/assets/website/css/clashforios/color.css">
    <!-- Responsive CSS -->
    <link rel="stylesheet" href="/assets/website/css/clashforios/responsive.css">
    <link rel="stylesheet" href="/assets/website/css/G.css" />
    <!-- Google tag (gtag.js) -->
<script async src="https://www.googletagmanager.com/gtag/js?id=G-5PB3ZYWX2H"></script>
<script>
  window.dataLayer = window.dataLayer || [];
  function gtag(){dataLayer.push(arguments);}
  gtag('js', new Date());

  gtag('config', 'G-5PB3ZYWX2H');
</script>
    <script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-3332997411212854"
     crossorigin="anonymous"></script>
    
</head>

<body data-page="detail">
    <!-- Main Wrapper Start -->
    <div class="main-wrapper">
                <header id="header-1" class="header-2">
            <div class="sticky-header">
                <div class="container">
                                        <a href="/" class="logo float-left">
                        <span>
                            VPN美国                        </span>
                    </a>
                                        <!-- /.logo End -->
                    <div class="navigation-wrap float-right">
                        <div class="menu-holder">
                            <div class="mobile-menu"></div>
                            <!-- /.mobile-menu End -->
                            <div class="main-menu navigation">
                                <nav>
                                    <ul>
                                                                                <li><a href="/">首页</a></li>
                                                                                <li><a href="/free-nodes/">免费节点</a></li>
                                                                                <li><a href="/paid-subscribe/">推荐机场</a></li>
                                                                                <li><a href="/client.htm">客户端</a></li>
                                                                                <li><a href="/news/">新闻资讯</a></li>
                                                                            </ul>
                                </nav>
                            </div>
                            <!-- /.navigation End -->
                        </div>
                        <!-- /.menu-holder End -->
                    </div>
                </div>
            </div>
        </header>
        <!-- /.header-2 End -->
        <!-- Sub Banner Start -->
        <div class="sub-banner">
            <div class="container">
                <div class="text text-right">
                    <h1 class="title">java自带的四种线程池</h1>
                </div>
                <nav class="breadcrumb-outer" aria-label="breadcrumb">
                    <ol class="breadcrumb d-inline-flex">
                        <li class="breadcrumb-item"><a href="/">首页</a></li>
                        <li class="breadcrumb-item"><a href="/news/">新闻资讯</a></li>
                        <li class="breadcrumb-item active" aria-current="page">正文</li>
                    </ol>
                </nav>
            </div>
        </div>
        <!-- Sub Banner End -->
        <!-- Main Content Start -->
        <div class="main-content">
            <!-- About us Section Start -->
            <section class="about-us mb-30">
                <div class="container">
                    <div class="row">
                        <div class="col-md-9">
                                            <input type="hidden" id="share-website-info" data-name="Clash Meta免费节点订阅站" data-url="https://clash-meta.github.io">
                <div class="xcblog-blog-detail">
                      				  				  				<h4 id="java预定义的哪四种线程池">java预定义的哪四种线程池？</h4> <ul> <li>newSingleThreadExexcutor：单线程数的线程池（核心线程数=最大线程数=1）</li> <li>newFixedThreadPool：固定线程数的线程池（核心线程数=最大线程数=自定义）</li> <li>newCacheThreadPool：可缓存的线程池（核心线程数=0，最大线程数=Integer.MAX_VALUE）</li> <li>newScheduledThreadPool：支持定时或周期任务的线程池（核心线程数=自定义，最大线程数=Integer.MAX_VALUE）</li> </ul> <h4 id="四种线程池有什么区别">四种线程池有什么区别？</h4> <p>上面四种线程池类都继承ThreadPoolExecutor，在创建时都是直接返回new ThreadPoolExecutor(参数)，它们的区别是定义的ThreadPoolExecutor(参数)中参数不同，而ThreadPoolExecutor又继承ExecutorService接口类</p> <ul> <li>newFixedThreadPool</li> </ul> <pre><code>定义： ExecutorService executorService=Executors.newFixedThreadPool(2);</code></pre> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220509/253a9853e2c2fefc83a5d533fd1ae592.jpg" alt="java自带的四种线程池"></p> <p>缺点：使用了LinkBlockQueue的链表型阻塞队列，当任务的堆积速度大于处理速度时，容易堆积任务而导致OOM内存溢出</p> <ul> <li>newSingleThreadExecutor</li> </ul> <pre><code>定义：ExecutorService executorService =Executors.newSingleThreadExecutor();</code></pre> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220509/3c223fcf8a728ff4463c0136dd956110.jpg" alt="java自带的四种线程池"></p> <p>上面代码神似new FixedThreadPoop(1)，但又有区别，因为外面多了一层FinalizableDelegatedExecutorService，其作用：<br /><img decoding="async" src="http://img.555519.xyz/uploads3/20220509/c50d7860b125ccbab167cd47b463c3aa.jpg" alt="java自带的四种线程池"></p> <p>可知，fixedExecutorService的本质是ThreadPoolExecutor,所以fixedExecutorService可以强转成ThreadPoolExecutor，但singleExecutorService与ThreadPoolExecutor无任何关系，所以强转失败，故newSingleThreadExecutor()被创建后，无法再修改其线程池参数，真正地做到single单个线程。</p> <p>缺点：使用了LinkBlockQueue的链表型阻塞队列，当任务的堆积速度大于处理速度时，容易堆积任务而导致OOM内存溢出</p> <ul> <li>newCacheThreadPool</li> </ul> <pre><code>定义：ExecutorService executorService=Executors.newCacheThreadPool();</code></pre> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220509/1c0a5c0a2ac3e7a10a24ed9dda619c1d.jpg" alt="java自带的四种线程池"></p> <p>缺点：SynchronousQueue是BlockingQueue的一种实现，它也是一个队列，因为最大线程数为Integer.MAX_VALUE，所有当线程过多时容易OOM内存溢出</p> <ul> <li>ScheduledThreadPool</li> </ul> <pre><code>定义：ExecutorService executorService=Executors.newScheduledThreadPool(2);</code></pre> <pre><code>源码： public static ScheduledExecutorService newScheduledThreadPool(int corePoolSize) {         //ScheduledThreadPoolExecutor继承ThreadPoolExecutor         return new ScheduledThreadPoolExecutor(corePoolSize);     }      public ScheduledThreadPoolExecutor(int corePoolSize) {     //ScheduledThreadPoolExecutor继承ThreadPoolExecutor，故super()会调用ThreadPoolExecutor的构造函数初始化并返回一个ThreadPoolExecutor，而ThreadPoolExecutor使实现ExecutorService接口的     //最终ScheduledThreadPoolExecutor也和上面几种线程池一样返回的是ExecutorService接口的实现类ThreadPoolExecutor     super(corePoolSize, Integer.MAX_VALUE, 0, NANOSECONDS,           new DelayedWorkQueue()); }</code></pre> <h4 id="线程池有哪几个重要参数">线程池有哪几个重要参数？</h4> <p>ThreadPoolExecutor构造方法如下：</p> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220509/32b7246bea606861a284670d7cfa7342.jpg" alt="java自带的四种线程池"></p> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220509/a578d7e40926e855ec9e9592c4003441.jpg" alt="java自带的四种线程池"></p> <ul> <li>keepAliveTime是指当前线程数位于 [核心线程数,最大线程数] 之间的这些非核心线程等待多久空闲时间而没有活干时，就退出线程池；</li> <li>等待丢列的大小与最大线程数是没有任何关系的，线程创建优先级=核心线程 &gt; 阻塞队列 &gt; 扩容的线程(当前核心线程数小于最大线程数时才能扩容线程)</li> <li>假如核心线程数5，等待队列长度为3，最大线程数10：当线程数不断在增加时，先创建5个核心线程，核心线程数满了再把线程丢进等待丢列，等待队列满了(3个线程)，此时会比较最大线程数（只有等待丢列满了最大线程数才能出场），还可以继续创建2个线程（5+3+2），若线程数超过了最大线程数，则执行拒绝策略；</li> <li>假如核心线程数5，等待队列长度为3，最大线程数7：当线程数不断在增加时，先创建5个核心线程，核心线程数满了再把线程丢进等待丢列，当等待队列中有2个线程时达到了最大线程数(5+2=7)，但是等待丢列还没满所以不用管最大线程数，直到等待丢列满了（3个阻塞线程），此时会比较最大线程数（只有等待丢列满了最大线程数才能出场），此时核心+等待丢列=5+3=8&gt;7=最大线程数，即已经达到最大线程数了，则执行拒绝策略；</li> <li>如果把等待丢列设置为LinkedBlockingQueue无界丢列，这个丢列是无限大的，就永远不会走到判断最大线程数那一步了</li> </ul> <h4 id="如何自定义线程池">如何自定义线程池</h4> <p>可以使用有界队列，自定义线程创建工厂ThreadFactory和拒绝策略handler来自定义线程池</p> <pre><code>public class ThreadTest {     public static void main(String[] args) throws InterruptedException, IOException {         int corePoolSize = 2;         int maximumPoolSize = 4;         long keepAliveTime = 10;         TimeUnit unit = TimeUnit.SECONDS;         BlockingQueue&lt;Runnable&gt; workQueue = new ArrayBlockingQueue&lt;&gt;(2);         ThreadFactory threadFactory = new NameTreadFactory();         RejectedExecutionHandler handler = new MyIgnorePolicy();        ThreadPoolExecutor executor = new ThreadPoolExecutor(corePoolSize, maximumPoolSize, keepAliveTime, unit,                 workQueue, threadFactory, handler);         executor.prestartAllCoreThreads(); // 预启动所有核心线程                 for (int i = 1; i &lt;= 10; i++) {             MyTask task = new MyTask(String.valueOf(i));             executor.execute(task);         }         System.in.read(); //阻塞主线程     }     static class NameTreadFactory implements ThreadFactory {         private final AtomicInteger mThreadNum = new AtomicInteger(1);         @Override         public Thread newThread(Runnable r) {             Thread t = new Thread(r, "my-thread-" + mThreadNum.getAndIncrement());             System.out.println(t.getName() + " has been created");             return t;         }     }      public static class MyIgnorePolicy implements RejectedExecutionHandler {         @Override         public void rejectedExecution(Runnable r, ThreadPoolExecutor e) {             doLog(r, e);         }         private void doLog(Runnable r, ThreadPoolExecutor e) {             // 可做日志记录等             System.err.println( r.toString() + " rejected"); //          System.out.println("completedTaskCount: " + e.getCompletedTaskCount());         }     }      static class MyTask implements Runnable {         private String name;         public MyTask(String name) {             this.name = name;         }         @Override         public void run() {             try {                 System.out.println(this.toString() + " is running!");                 Thread.sleep(3000); //让任务执行慢点             } catch (InterruptedException e) {                 e.printStackTrace();             }         }         public String getName() {             return name;         }         @Override         public String toString() {             return "MyTask [name=" + name + "]";         }     } }</code></pre> <p>运行结果：</p> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220509/4270897989325bb9b56ceb6940858c59.jpg" alt="java自带的四种线程池"></p> <p>其中7-10号线程被拒绝策略拒绝了，1、2号线程执行完后，3、6号线程进入核心线程池执行，此时4、5号线程在任务队列等待执行，3、6线程执行完再通知4、5线程执行</p> 			                </div>
                <div class="clearfix"></div>
                <div class="col-md-12 mt-5">
                                        <p>上一个：<a href="/news/article-100183.htm">MongoDB利用oplog恢复数据的方法_MongoDB_</a></p>
                                        <p>下一个：<a href="/news/article-100841.htm">宠物店领养狗狗可靠吗（宠物店领养宠物）</a></p>
                                    </div>
                                        </div>
                        <div class="col-md-3">
                            <div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">热门文章</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2"><a href="/free-nodes/2025-4-5-clash-v2ray-ss-ssr.htm" title="VPN美国 | 4月5日19.1M/S|免费VPN/V2ray/SSR/Shadowrocket/Clash免费节点链接地址">VPN美国 | 4月5日19.1M/S|免费VPN/V2ray/SSR/Shadowrocket/Clash免费节点链接地址</a></li>
                        <li class="py-2"><a href="/news/article-94994.htm" title="做猫粮成本 做猫粮成本高吗">做猫粮成本 做猫粮成本高吗</a></li>
                        <li class="py-2"><a href="/news/article-86154.htm" title="动物疫苗合格证怎么办理流程视频（动物疫苗证书）">动物疫苗合格证怎么办理流程视频（动物疫苗证书）</a></li>
                        <li class="py-2"><a href="/free-nodes/2025-4-3-free-v2ray-subscribe.htm" title="VPN美国 | 4月3日22.2M/S|免费VPN/SSR/Shadowrocket/V2ray/Clash免费节点链接地址">VPN美国 | 4月3日22.2M/S|免费VPN/SSR/Shadowrocket/V2ray/Clash免费节点链接地址</a></li>
                        <li class="py-2"><a href="/free-nodes/2025-3-8-free-v2ray.htm" title="VPN美国 | 3月8日18.1M/S|免费VPN/Shadowrocket/SSR/V2ray/Clash免费节点链接地址">VPN美国 | 3月8日18.1M/S|免费VPN/Shadowrocket/SSR/V2ray/Clash免费节点链接地址</a></li>
                        <li class="py-2"><a href="/news/article-79809.htm" title="动物疫苗接种间隔时间 动物疫苗接种间隔时间是多久">动物疫苗接种间隔时间 动物疫苗接种间隔时间是多久</a></li>
                        <li class="py-2"><a href="/free-nodes/2025-3-31-node-share-links.htm" title="VPN美国 | 3月31日22M/S|免费VPN/Clash/SSR/V2ray/Shadowrocket免费节点链接地址">VPN美国 | 3月31日22M/S|免费VPN/Clash/SSR/V2ray/Shadowrocket免费节点链接地址</a></li>
                        <li class="py-2"><a href="/free-nodes/2025-4-22-node-share.htm" title="VPN美国 | 4月22日21.4M/S|免费VPN/SSR/Clash/Shadowrocket/V2ray免费节点链接地址">VPN美国 | 4月22日21.4M/S|免费VPN/SSR/Clash/Shadowrocket/V2ray免费节点链接地址</a></li>
                        <li class="py-2"><a href="/news/article-86871.htm" title="宠物粮食品牌前十名排行榜图片及价格大全集（宠物粮食品牌起名大全）">宠物粮食品牌前十名排行榜图片及价格大全集（宠物粮食品牌起名大全）</a></li>
                        <li class="py-2"><a href="/free-nodes/2025-3-3-free-subscribe-node.htm" title="VPN美国 | 3月3日19.5M/S|免费VPN/V2ray/Clash/SSR/Shadowrocket免费节点链接地址">VPN美国 | 3月3日19.5M/S|免费VPN/V2ray/Clash/SSR/Shadowrocket免费节点链接地址</a></li>
                    </ul>
    </div>
</div>

<div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">归纳</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">68</span> <a href="/date/2025-04/" title="2025-04 归档">2025-04</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">90</span> <a href="/date/2025-03/" title="2025-03 归档">2025-03</a></h4>
            </li>
                    </ul>
    </div>
</div>

                        </div>
                    </div>
                </div>
            </section>
            <!-- About us Section End -->
        </div>
        <!-- Main Content End -->
                <!-- Copyright Start -->
        <div class="copyright">
                                <p>
                                                <a href="/">首页</a> |
                                                <a href="/free-nodes/">免费节点</a> |
                                                <a href="/paid-subscribe/">推荐机场</a> |
                                                <a href="/client.htm">客户端</a> |
                                                <a href="/news/">新闻资讯</a> |
                                                <a href="/about-us.htm">关于我们</a> |
                        <a href="/disclaimer.htm">免责申明</a> |
                        <a href="/privacy.htm">隐私申明</a> |
                        <a href="/sitemap.xml">网站地图</a>
                    </p>
            <p>
                <a href="/">VPN美国 节点官网</a> 版权所有 Powered by WordPress
            </p>
        </div>
        <!-- Copyright End -->
        <!-- Optional JavaScript -->
        <!-- jQuery first, then Popper.js, then Bootstrap JS -->
        <script src="/assets/website/js/frontend/clashforios/jquery.js"></script>
        <script src="/assets/website/js/frontend/clashforios/popper.min.js"></script>
        <script src="/assets/website/js/frontend/clashforios/bootstrap.min.js"></script>
        <script src="/assets/website/js/frontend/clashforios/responsivemenu.js"></script>
        <script src="/assets/website/js/frontend/clashforios/slick.min.js"></script>
        <script src="/assets/website/js/frontend/clashforios/masonry.min.js"></script>
        <script src="/assets/website/js/frontend/clashforios/custom.js"></script>
        <script src="https://www.freeclashnode.com/assets/js/frontend/invite-url.js"></script><script src="/assets/website/js/frontend/G.js"></script>
    </div>
    <!-- Main Wrapper End -->
</body>

</html>
<!doctype html>
<html xml:lang="zh-CN" lang="zh-CN">

<head>
        <link rel="canonical" href="https://vpnamerica.github.io/news/article-55365.htm" />
    <!-- Required meta tags -->
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
    <title>C语言读取和存储bmp格式图片</title>
        <meta name="description" content="开发过程中有时候需要解析bmp数据，下面先简单介绍bmp数据组成，后面附上C语言读取和存储bmp格式图片代码。  典型的位图文件格式通常包含下面几个数据块：  BMP文件头：保存位图文件的总体信息。 " />
        <link rel="icon" href="/assets/website/img/clashforios/favicon.ico" type="image/x-icon"/>

    <meta name="author" content="VPN美国 节点官网">
    <meta property="og:type" content="article" />
    <meta property="og:url" content="https://vpnamerica.github.io/news/article-55365.htm" />
    <meta property="og:site_name" content="VPN美国 节点官网" />
    <meta property="og:title" content="C语言读取和存储bmp格式图片" />
    <meta property="og:image" content="https://vpnamerica.github.io/uploads/20240922-1/1220af49365955a86004bd0581a3744a.webp" />
        <meta property="og:release_date" content="2025-02-12T09:08:23" />
    <meta property="og:updated_time" content="2025-02-12T09:08:23" />
        <meta property="og:description" content="开发过程中有时候需要解析bmp数据，下面先简单介绍bmp数据组成，后面附上C语言读取和存储bmp格式图片代码。  典型的位图文件格式通常包含下面几个数据块：  BMP文件头：保存位图文件的总体信息。 " />
        
    <meta name="applicable-device" content="pc,mobile" />
    <meta name="renderer" content="webkit" />
    <meta name="force-rendering" content="webkit" />
    <meta http-equiv="Cache-Control" content="no-transform" />
    <meta name="robots" content="max-image-preview:large" />
    <meta name="apple-mobile-web-app-capable" content="yes">
    <meta name="apple-mobile-web-app-status-bar-style" content="black">
    <meta name="apple-mobile-web-app-title" content="C语言读取和存储bmp格式图片">
    <meta name="format-detection" content="telephone=no">

    <link rel="dns-prefetch" href="https:/www.googletagmanager.com">
    <link rel="dns-prefetch" href="https://www.googleadservices.com">
    <link rel="dns-prefetch" href="https://www.google-analytics.com">
    <link rel="dns-prefetch" href="https://pagead2.googlesyndication.com">
    <link rel="dns-prefetch" href="https://cm.g.doubleclick.net">
    <link rel="dns-prefetch" href="https://fonts.googleapis.com">
    
    <!-- Bootstrap CSS -->
    <link rel="stylesheet" href="/assets/website/css/clashforios/bootstrap.min.css">
    <!-- Slick Silder CSS -->
    <link rel="stylesheet" href="/assets/website/css/clashforios/slick.css">
    <!-- Fontawesome CSS -->
    <link rel="stylesheet" href="/assets/website/css/clashforios/fontawesome.css">
    <!-- Flaticon CSS -->
    <link rel="stylesheet" href="/assets/website/css/clashforios/style.css">
    <!-- Theme Element CSS -->
    <link rel="stylesheet" href="/assets/website/css/clashforios/responsivemenu.css">
    <!-- Theme Element CSS -->
    <link rel="stylesheet" href="/assets/website/css/clashforios/elements.css">
    <!-- Color CSS -->
    <link rel="stylesheet" href="/assets/website/css/clashforios/color.css">
    <!-- Responsive CSS -->
    <link rel="stylesheet" href="/assets/website/css/clashforios/responsive.css">
    <!-- Google tag (gtag.js) -->
<script async src="https://www.googletagmanager.com/gtag/js?id=G-5PB3ZYWX2H"></script>
<script>
  window.dataLayer = window.dataLayer || [];
  function gtag(){dataLayer.push(arguments);}
  gtag('js', new Date());

  gtag('config', 'G-5PB3ZYWX2H');
</script>
    <script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-3332997411212854"
     crossorigin="anonymous"></script>
    
</head>

<body data-page="detail">
    <!-- Main Wrapper Start -->
    <div class="main-wrapper">
                <header id="header-1" class="header-2">
            <div class="sticky-header">
                <div class="container">
                                        <a href="/" class="logo float-left">
                        <span>
                            VPN美国                        </span>
                    </a>
                                        <!-- /.logo End -->
                    <div class="navigation-wrap float-right">
                        <div class="menu-holder">
                            <div class="mobile-menu"></div>
                            <!-- /.mobile-menu End -->
                            <div class="main-menu navigation">
                                <nav>
                                    <ul>
                                                                                <li><a href="/">首页</a></li>
                                                                                <li><a href="/free-nodes/">免费节点</a></li>
                                                                                <li><a href="/paid-subscribe/">推荐机场</a></li>
                                                                                <li><a href="/client.htm">客户端</a></li>
                                                                                <li><a href="/news/">新闻资讯</a></li>
                                                                            </ul>
                                </nav>
                            </div>
                            <!-- /.navigation End -->
                        </div>
                        <!-- /.menu-holder End -->
                    </div>
                </div>
            </div>
        </header>
        <!-- /.header-2 End -->
        <!-- Sub Banner Start -->
        <div class="sub-banner">
            <div class="container">
                <div class="text text-right">
                    <h1 class="title">C语言读取和存储bmp格式图片</h1>
                </div>
                <nav class="breadcrumb-outer" aria-label="breadcrumb">
                    <ol class="breadcrumb d-inline-flex">
                        <li class="breadcrumb-item"><a href="/">首页</a></li>
                        <li class="breadcrumb-item"><a href="/news/">新闻资讯</a></li>
                        <li class="breadcrumb-item active" aria-current="page">正文</li>
                    </ol>
                </nav>
            </div>
        </div>
        <!-- Sub Banner End -->
        <!-- Main Content Start -->
        <div class="main-content">
            <!-- About us Section Start -->
            <section class="about-us mb-30">
                <div class="container">
                    <div class="row">
                        <div class="col-md-9">
                                            <input type="hidden" id="share-website-info" data-name="Clash Meta免费节点订阅站" data-url="https://clash-meta.github.io">
                  				  				  				<div id="content_views" class="markdown_views prism-atom-one-dark"> <p>开发过程中有时候需要解析bmp数据，下面先简单介绍bmp数据组成，后面附上C语言读取和存储bmp格式图片代码。</p> <h2> <a id="_2" rel="nofollow"></a>典型的位图文件格式通常包含下面几个数据块：</h2> <ol> <li>BMP文件头：保存位图文件的总体信息。</li> <li>位图信息头：保存位图图像的详细信息。位图信息：保存位图图像的详细信息。</li> <li>调色板：保存所用颜色的定义。调色板：保存所用颜色的定义。</li> <li>位图数据：保存一个又一个像素的实际图像。位图数据：保存一个又一个像素的实际图像。</li> </ol> <h3> <a id="1_BMP14_8" rel="nofollow"></a>1. BMP文件头（14字节）</h3> <p>BMP文件头数据结构含有BMP文件的类型、文件大小和位图起始位置等信息。</p> <p>这部分是识别信息，典型的应用程序会首先普通读取这部分数据以确保的确是位图文件并且没有损坏。</p> <p>位图头结构体定义如下：</p> <pre><code class="prism language-c"><span class="token keyword">typedef</span> <span class="token keyword">struct</span> <span class="token punctuation">{<!-- --></span>     uint16_t type<span class="token punctuation">;</span>  <span class="token comment">//位图文件的类型，必须为BM(1-2字节）</span>     uint32_t size<span class="token punctuation">;</span>  <span class="token comment">//位图文件的大小，以字节为单位（3-6字节，低位在前）</span>     uint16_t reserved1<span class="token punctuation">;</span>  <span class="token comment">//位图文件保留字，必须为0(7-8字节）</span>     uint16_t reserved2<span class="token punctuation">;</span>  <span class="token comment">//位图文件保留字，必须为0(9-10字节）</span>     uint32_t off_bits<span class="token punctuation">;</span>  <span class="token comment">//位图数据位置的地址偏移，即起始位置，以相对于位图（11-14字节，低位在前）</span> <span class="token punctuation">}</span>__attribute__ <span class="token punctuation">(</span><span class="token punctuation">(</span>packed<span class="token punctuation">)</span><span class="token punctuation">)</span> bmp_file_header_t<span class="token punctuation">;</span> </code></pre> <h3> <a id="2_40_26" rel="nofollow"></a>2. 位图信息头（40字节）</h3> <p>这部分告诉应用程序图像的详细信息，在屏幕上显示图像将会使用这些信息，它从文件的第15个字节开始。</p> <p>位图信息头结构体定义如下：</p> <pre><code class="prism language-c"><span class="token keyword">typedef</span> <span class="token keyword">struct</span> <span class="token punctuation">{<!-- --></span>     uint32_t size<span class="token punctuation">;</span>     int32_t width<span class="token punctuation">;</span>     int32_t height<span class="token punctuation">;</span>     uint16_t planes<span class="token punctuation">;</span>     uint16_t bit_count<span class="token punctuation">;</span>     uint32_t compression<span class="token punctuation">;</span>     uint32_t size_image<span class="token punctuation">;</span>     uint32_t x_pels_permeter<span class="token punctuation">;</span>     uint32_t y_pels_permeter<span class="token punctuation">;</span>     uint32_t clr_used<span class="token punctuation">;</span>     uint32_t clr_important<span class="token punctuation">;</span> <span class="token punctuation">}</span> bmp_info_header_t<span class="token punctuation">;</span> </code></pre> <p>结构体变量解析如下：</p> <ul> <li>uint32_t size; 15-18字节：定义以下用来描述影像的区块（BitmapInfoHeader）的大小，即本结构所占用字节数，它的值是：40</li> <li>int32_t width; 19-22字节：位图宽度，以像素为单位。</li> <li>int32_t height; 23-26字节：位图高度，以像素为单位。</li> <li>uint16_t planes; 27-28字节：保存所用彩色位面的个数。不经常使用。</li> <li>uint16_t bit_count; 29-30字节：保存每个像素的位数，它是图像的颜色深度。常用值是1（双色灰阶）、4（16色灰阶）、8（256色灰阶）和24（彩色）。</li> <li>uint32_t compression; 31-34字节：定义所用的压缩算法。允许的值是0、1、2、3、4、5。 <ul> <li>0 - 没有压缩（也用BI_RGB表示）</li> <li>1 - 行程长度编码 8位/像素（也用BI_RLE8表示）</li> <li>2 - 行程长度编码4位/像素（也用BI_RLE4表示）</li> <li>3 - Bit field（也用BI_BITFIELDS表示）</li> <li>4 - JPEG图像（也用BI_JPEG表示）</li> <li>5 - PNG图像（也用BI_PNG表示）</li> </ul> </li> <li>uint32_t size_image; 35-38字节：位图的大小(其中包含了为了补齐行数是4的倍数而添加的空字节)，以字节为单位。这是原始位图数据的大小，不要与文件大小混淆。</li> <li>uint32_t x_pels_permeter; 39-42字节：位图水平分辨率，每米像素数。</li> <li>uint32_t y_pels_permeter; 43-46字节：位图垂直分辨率，每米像素数。</li> <li>uint32_t clr_used; 47-50字节：位图实际使用的颜色表中的颜色数。</li> <li>uint32_t clr_important; 51-54字节：位图显示过程中重要的颜色数，当每个颜色都重要时这个值与颜色数目（clr_used）相等。</li> </ul> <h3> <a id="3__68" rel="nofollow"></a>3. 调色板</h3> <p>BMP调色板结构体定义如下：</p> <pre><code class="prism language-c"><span class="token keyword">typedef</span> <span class="token keyword">struct</span> _tagRGBQUAD <span class="token punctuation">{<!-- --></span> BYTE  rgbBlue<span class="token punctuation">;</span>       <span class="token comment">//指定蓝色强度</span> BYTE  rgbGreen<span class="token punctuation">;</span>      <span class="token comment">//指定绿色强度</span> BYTE  rgbRed<span class="token punctuation">;</span>        <span class="token comment">//指定红色强度</span> BYTE  rgbReserved<span class="token punctuation">;</span>  <span class="token comment">//保留，设置为0</span> <span class="token punctuation">}</span> RGBQUAD<span class="token punctuation">;</span> </code></pre> <p>1，4，8位图像才会使用调色板数据，16,24,32位图像不需要调色板数据，即调色板最多只需要256项（索引0 - 255）。</p> <p>颜色表的大小根据所使用的颜色模式而定：2色图像为8字节；16色图像位64字节；256色图像为1024字节。其中，每4字节表示一种颜色，并以B（蓝色）、G（绿色）、R（红色）、alpha（32位位图的透明度值，一般不需要）。即首先4字节表示颜色号1的颜色，接下来表示颜色号2的颜色，依此类推。</p> <p>颜色表中RGBQUAD结构数据的个数有biBitCount来确定，当biBitCount=1,4,8时，分别有2,16,256个表项：</p> <ul> <li>当biBitCount=1时，为2色图像，BMP位图中有2个数据结构RGBQUAD，一个调色板占用4字节数据，所以2色图像的调色板长度为2*4为8字节。</li> <li>当biBitCount=4时，为16色图像，BMP位图中有16个数据结构RGBQUAD，一个调色板占用4字节数据，所以16像的调色板长度为16*4为64字节。</li> <li>当biBitCount=8时，为256色图像，BMP位图中有256个数据结构RGBQUAD，一个调色板占用4字节数据，所以256色图像的调色板长度为256*4为1024字节。</li> <li>当biBitCount=16，24或32时，没有颜色表。</li> </ul> <h3> <a id="4__91" rel="nofollow"></a>4. 位图数据</h3> <p>位图数据记录了位图的每一个像素值。<br /><strong>像素是从下到上、从左到右保存的</strong>。<br /> 每个像素使用一个或者多个字节表示。<br /><strong>如果一个图像水平线的字节数不是4的倍数，这行就使用空字节补齐，通常是ASCII码0</strong>。</p> <p>例如：</p> <ol> <li> <p>一张5 * 6的图片，有30个pixels，因为列数6不是4的倍数，所以会显示成：<br /> xxxxxx00 xxxxxx00 xxxxxx00 xxxxxx00 xxxxxx00<br /> 其中，x代表调色盘的编号，0代表补齐的空字节</p> </li> <li> <p>一张4 * 4的图片，有16个pixels，因为列数刚好是4的倍数，所以会显示成：<br /> xxxx xxxx xxxx xxxx</p> </li> </ol> <h2> <a id="Cbmp_107" rel="nofollow"></a>C语言读取和存储bmp示例代码</h2> <pre><code class="prism language-c"><span class="token macro property">#<span class="token directive keyword">include</span> <span class="token string">&lt;stdio.h&gt;</span></span> <span class="token macro property">#<span class="token directive keyword">include</span> <span class="token string">&lt;stdint.h&gt;</span></span> <span class="token macro property">#<span class="token directive keyword">include</span> <span class="token string">&lt;stdlib.h&gt;</span></span> <span class="token macro property">#<span class="token directive keyword">include</span> <span class="token string">&lt;math.h&gt;</span></span> <span class="token macro property">#<span class="token directive keyword">include</span> <span class="token string">&lt;string.h&gt;</span></span>  <span class="token keyword">typedef</span> <span class="token keyword">struct</span> <span class="token punctuation">{<!-- --></span>     uint16_t type<span class="token punctuation">;</span>     uint32_t size<span class="token punctuation">;</span>     uint16_t reserved1<span class="token punctuation">;</span>     uint16_t reserved2<span class="token punctuation">;</span>     uint32_t off_bits<span class="token punctuation">;</span> <span class="token punctuation">}</span>__attribute__ <span class="token punctuation">(</span><span class="token punctuation">(</span>packed<span class="token punctuation">)</span><span class="token punctuation">)</span> bmp_file_header_t<span class="token punctuation">;</span>  <span class="token keyword">typedef</span> <span class="token keyword">struct</span> <span class="token punctuation">{<!-- --></span>     uint32_t size<span class="token punctuation">;</span>     int32_t width<span class="token punctuation">;</span>     int32_t height<span class="token punctuation">;</span>     uint16_t planes<span class="token punctuation">;</span>     uint16_t bit_count<span class="token punctuation">;</span>     uint32_t compression<span class="token punctuation">;</span>     uint32_t size_image<span class="token punctuation">;</span>     uint32_t x_pels_permeter<span class="token punctuation">;</span>     uint32_t y_pels_permeter<span class="token punctuation">;</span>     uint32_t clr_used<span class="token punctuation">;</span>     uint32_t clr_important<span class="token punctuation">;</span> <span class="token punctuation">}</span> bmp_info_header_t<span class="token punctuation">;</span>  <span class="token keyword">static</span> bmp_file_header_t s_bmp_file_header <span class="token operator">=</span> <span class="token punctuation">{<!-- --></span> <span class="token number">0x4d42</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span> <span class="token punctuation">}</span><span class="token punctuation">;</span> <span class="token keyword">static</span> bmp_info_header_t s_bmp_info_header <span class="token operator">=</span> <span class="token punctuation">{<!-- --></span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>  <span class="token keyword">static</span> uint8_t s_bmpdata<span class="token punctuation">[</span><span class="token number">200</span> <span class="token operator">*</span> <span class="token number">200</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">{<!-- --></span> <span class="token number">0</span> <span class="token punctuation">}</span><span class="token punctuation">;</span> <span class="token keyword">static</span> uint32_t s_bmp_col <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> <span class="token keyword">static</span> uint32_t s_bmp_row <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> <span class="token keyword">char</span> in_file_path<span class="token punctuation">[</span><span class="token number">256</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">"in.bmp"</span><span class="token punctuation">;</span> <span class="token keyword">char</span> out_file_path<span class="token punctuation">[</span><span class="token number">256</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">"out.bmp"</span><span class="token punctuation">;</span>  int32_t <span class="token function">bmp_file_to_image</span><span class="token punctuation">(</span><span class="token keyword">const</span> <span class="token keyword">char</span> <span class="token operator">*</span>file_path<span class="token punctuation">,</span> uint8_t <span class="token operator">*</span>image<span class="token punctuation">,</span> uint32_t <span class="token operator">*</span>col<span class="token punctuation">,</span> uint32_t <span class="token operator">*</span>row<span class="token punctuation">)</span> <span class="token punctuation">{<!-- --></span>     FILE <span class="token operator">*</span>file <span class="token operator">=</span> <span class="token constant">NULL</span><span class="token punctuation">;</span>     uint32_t line_width <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>     uint32_t width <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>     uint32_t height <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>     int32_t err <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>     uint8_t buf<span class="token punctuation">[</span><span class="token number">200</span> <span class="token operator">*</span> <span class="token number">200</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">{<!-- --></span> <span class="token number">0</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>     <span class="token keyword">char</span> temp<span class="token punctuation">[</span><span class="token number">2048</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">{<!-- --></span> <span class="token number">0</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>     <span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>      <span class="token keyword">do</span> <span class="token punctuation">{<!-- --></span>         <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token constant">NULL</span> <span class="token operator">==</span> file_path <span class="token operator">||</span> <span class="token constant">NULL</span> <span class="token operator">==</span> image<span class="token punctuation">)</span>         <span class="token punctuation">{<!-- --></span>             err <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span>             <span class="token keyword">break</span><span class="token punctuation">;</span>         <span class="token punctuation">}</span>         <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"[%s] file_path = %s\n"</span><span class="token punctuation">,</span> <span class="token constant">__func__</span><span class="token punctuation">,</span> file_path<span class="token punctuation">)</span><span class="token punctuation">;</span>          file <span class="token operator">=</span> <span class="token function">fopen</span><span class="token punctuation">(</span>file_path<span class="token punctuation">,</span> <span class="token string">"rb"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>         <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token constant">NULL</span> <span class="token operator">==</span> file<span class="token punctuation">)</span>         <span class="token punctuation">{<!-- --></span> 			err <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span>             <span class="token keyword">break</span><span class="token punctuation">;</span>         <span class="token punctuation">}</span>         <span class="token function">fread</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>s_bmp_file_header<span class="token punctuation">,</span> <span class="token keyword">sizeof</span><span class="token punctuation">(</span>s_bmp_file_header<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> file<span class="token punctuation">)</span><span class="token punctuation">;</span>          <span class="token function">fread</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>s_bmp_info_header<span class="token punctuation">,</span> <span class="token keyword">sizeof</span><span class="token punctuation">(</span>s_bmp_info_header<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> file<span class="token punctuation">)</span><span class="token punctuation">;</span>         <span class="token function">fread</span><span class="token punctuation">(</span>temp<span class="token punctuation">,</span> <span class="token number">4</span><span class="token operator">*</span><span class="token number">256</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> file<span class="token punctuation">)</span><span class="token punctuation">;</span>         width <span class="token operator">=</span> s_bmp_info_header<span class="token punctuation">.</span>width<span class="token punctuation">;</span>         height <span class="token operator">=</span> s_bmp_info_header<span class="token punctuation">.</span>height<span class="token punctuation">;</span>         <span class="token operator">*</span>col <span class="token operator">=</span> width<span class="token punctuation">;</span>         <span class="token operator">*</span>row <span class="token operator">=</span> height<span class="token punctuation">;</span>         line_width <span class="token operator">=</span> <span class="token punctuation">(</span>width <span class="token operator">+</span> <span class="token number">3</span><span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token number">4</span> <span class="token operator">*</span> <span class="token number">4</span><span class="token punctuation">;</span>         <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"[%s] line_width = %d, width = %d, height = %d\n"</span><span class="token punctuation">,</span> <span class="token constant">__func__</span><span class="token punctuation">,</span> line_width<span class="token punctuation">,</span> width<span class="token punctuation">,</span> height<span class="token punctuation">)</span><span class="token punctuation">;</span>          <span class="token keyword">for</span> <span class="token punctuation">(</span>i <span class="token operator">=</span> height <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&gt;=</span> <span class="token number">0</span><span class="token punctuation">;</span> i<span class="token operator">--</span><span class="token punctuation">)</span>         <span class="token punctuation">{<!-- --></span> 			<span class="token keyword">if</span> <span class="token punctuation">(</span>line_width <span class="token operator">==</span> width<span class="token punctuation">)</span> 			<span class="token punctuation">{<!-- --></span> 				<span class="token function">fread</span><span class="token punctuation">(</span>buf <span class="token operator">+</span> i <span class="token operator">*</span> width<span class="token punctuation">,</span> width<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> file<span class="token punctuation">)</span><span class="token punctuation">;</span> 		    <span class="token punctuation">}</span> 		    <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>line_width <span class="token operator">&gt;</span> width<span class="token punctuation">)</span> 			<span class="token punctuation">{<!-- --></span> 				<span class="token function">fread</span><span class="token punctuation">(</span>buf <span class="token operator">+</span> i <span class="token operator">*</span> width<span class="token punctuation">,</span> width<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> file<span class="token punctuation">)</span><span class="token punctuation">;</span> 				<span class="token function">fread</span><span class="token punctuation">(</span>temp<span class="token punctuation">,</span> line_width<span class="token operator">-</span>width<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> file<span class="token punctuation">)</span><span class="token punctuation">;</span> 			<span class="token punctuation">}</span>         <span class="token punctuation">}</span>         <span class="token function">memcpy</span><span class="token punctuation">(</span>image<span class="token punctuation">,</span> buf<span class="token punctuation">,</span> width <span class="token operator">*</span> height<span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token punctuation">}</span> <span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token keyword">if</span> <span class="token punctuation">(</span>file <span class="token operator">!=</span> <span class="token constant">NULL</span><span class="token punctuation">)</span>     <span class="token punctuation">{<!-- --></span>         <span class="token function">fclose</span><span class="token punctuation">(</span>file<span class="token punctuation">)</span><span class="token punctuation">;</span>     <span class="token punctuation">}</span>     <span class="token keyword">return</span> err<span class="token punctuation">;</span> <span class="token punctuation">}</span>  int32_t <span class="token function">dump_image_to_bmp_file</span><span class="token punctuation">(</span><span class="token keyword">const</span> <span class="token keyword">char</span> <span class="token operator">*</span>file_path<span class="token punctuation">,</span> uint8_t <span class="token operator">*</span>image<span class="token punctuation">,</span> uint32_t width<span class="token punctuation">,</span> uint32_t height<span class="token punctuation">)</span> <span class="token punctuation">{<!-- --></span>     FILE <span class="token operator">*</span>file <span class="token operator">=</span> <span class="token constant">NULL</span><span class="token punctuation">;</span>     int32_t err <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>      <span class="token keyword">do</span> <span class="token punctuation">{<!-- --></span>         <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token constant">NULL</span> <span class="token operator">==</span> file_path <span class="token operator">||</span> <span class="token constant">NULL</span> <span class="token operator">==</span> image<span class="token punctuation">)</span>         <span class="token punctuation">{<!-- --></span>             err <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span>             <span class="token keyword">break</span><span class="token punctuation">;</span>         <span class="token punctuation">}</span>          uint32_t line_width <span class="token operator">=</span> <span class="token punctuation">(</span>width <span class="token operator">+</span> <span class="token number">3</span><span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token number">4</span> <span class="token operator">*</span> <span class="token number">4</span><span class="token punctuation">;</span>         s_bmp_file_header<span class="token punctuation">.</span>off_bits <span class="token operator">=</span> <span class="token keyword">sizeof</span><span class="token punctuation">(</span>bmp_file_header_t<span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token keyword">sizeof</span><span class="token punctuation">(</span>bmp_info_header_t<span class="token punctuation">)</span>                 <span class="token operator">+</span> <span class="token number">4</span> <span class="token operator">*</span> <span class="token number">256</span><span class="token punctuation">;</span>         s_bmp_file_header<span class="token punctuation">.</span>size <span class="token operator">=</span> s_bmp_file_header<span class="token punctuation">.</span>off_bits <span class="token operator">+</span> line_width <span class="token operator">*</span> height<span class="token punctuation">;</span>          s_bmp_info_header<span class="token punctuation">.</span>size <span class="token operator">=</span> <span class="token keyword">sizeof</span><span class="token punctuation">(</span>bmp_info_header_t<span class="token punctuation">)</span><span class="token punctuation">;</span>         s_bmp_info_header<span class="token punctuation">.</span>width <span class="token operator">=</span> width<span class="token punctuation">;</span>         s_bmp_info_header<span class="token punctuation">.</span>height <span class="token operator">=</span> height<span class="token punctuation">;</span>         s_bmp_info_header<span class="token punctuation">.</span>size_image <span class="token operator">=</span> line_width <span class="token operator">*</span> height<span class="token punctuation">;</span>          <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"[%s] line_width = %d, width = %d, height = %d\n"</span><span class="token punctuation">,</span> <span class="token constant">__func__</span><span class="token punctuation">,</span> line_width<span class="token punctuation">,</span> width<span class="token punctuation">,</span> height<span class="token punctuation">)</span><span class="token punctuation">;</span>          file <span class="token operator">=</span> <span class="token function">fopen</span><span class="token punctuation">(</span>file_path<span class="token punctuation">,</span> <span class="token string">"wb"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>         <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token constant">NULL</span> <span class="token operator">==</span> file<span class="token punctuation">)</span>         <span class="token punctuation">{<!-- --></span> 			err <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span>             <span class="token keyword">break</span><span class="token punctuation">;</span>         <span class="token punctuation">}</span>          <span class="token function">fwrite</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>s_bmp_file_header<span class="token punctuation">.</span>type<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token keyword">sizeof</span><span class="token punctuation">(</span>s_bmp_file_header<span class="token punctuation">.</span>type<span class="token punctuation">)</span><span class="token punctuation">,</span> file<span class="token punctuation">)</span><span class="token punctuation">;</span>         <span class="token function">fwrite</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>s_bmp_file_header<span class="token punctuation">.</span>size<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token keyword">sizeof</span><span class="token punctuation">(</span>s_bmp_file_header<span class="token punctuation">.</span>size<span class="token punctuation">)</span><span class="token punctuation">,</span> file<span class="token punctuation">)</span><span class="token punctuation">;</span>         <span class="token function">fwrite</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>s_bmp_file_header<span class="token punctuation">.</span>reserved1<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token keyword">sizeof</span><span class="token punctuation">(</span>s_bmp_file_header<span class="token punctuation">.</span>reserved1<span class="token punctuation">)</span><span class="token punctuation">,</span> file<span class="token punctuation">)</span><span class="token punctuation">;</span>         <span class="token function">fwrite</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>s_bmp_file_header<span class="token punctuation">.</span>reserved2<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token keyword">sizeof</span><span class="token punctuation">(</span>s_bmp_file_header<span class="token punctuation">.</span>reserved2<span class="token punctuation">)</span><span class="token punctuation">,</span> file<span class="token punctuation">)</span><span class="token punctuation">;</span>         <span class="token function">fwrite</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>s_bmp_file_header<span class="token punctuation">.</span>off_bits<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token keyword">sizeof</span><span class="token punctuation">(</span>s_bmp_file_header<span class="token punctuation">.</span>off_bits<span class="token punctuation">)</span><span class="token punctuation">,</span> file<span class="token punctuation">)</span><span class="token punctuation">;</span>          <span class="token function">fwrite</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>s_bmp_info_header<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token keyword">sizeof</span><span class="token punctuation">(</span>bmp_info_header_t<span class="token punctuation">)</span><span class="token punctuation">,</span> file<span class="token punctuation">)</span><span class="token punctuation">;</span>         uint8_t alpha <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>         int32_t i<span class="token punctuation">;</span>         <span class="token keyword">for</span> <span class="token punctuation">(</span>i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">256</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span>         <span class="token punctuation">{<!-- --></span>             <span class="token function">fwrite</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>i<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token keyword">sizeof</span><span class="token punctuation">(</span>uint8_t<span class="token punctuation">)</span><span class="token punctuation">,</span> file<span class="token punctuation">)</span><span class="token punctuation">;</span>             <span class="token function">fwrite</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>i<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token keyword">sizeof</span><span class="token punctuation">(</span>uint8_t<span class="token punctuation">)</span><span class="token punctuation">,</span> file<span class="token punctuation">)</span><span class="token punctuation">;</span>             <span class="token function">fwrite</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>i<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token keyword">sizeof</span><span class="token punctuation">(</span>uint8_t<span class="token punctuation">)</span><span class="token punctuation">,</span> file<span class="token punctuation">)</span><span class="token punctuation">;</span>             <span class="token function">fwrite</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>alpha<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token keyword">sizeof</span><span class="token punctuation">(</span>uint8_t<span class="token punctuation">)</span><span class="token punctuation">,</span> file<span class="token punctuation">)</span><span class="token punctuation">;</span>         <span class="token punctuation">}</span>          <span class="token keyword">for</span> <span class="token punctuation">(</span>i <span class="token operator">=</span> height <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&gt;=</span> <span class="token number">0</span><span class="token punctuation">;</span> i<span class="token operator">--</span><span class="token punctuation">)</span>         <span class="token punctuation">{<!-- --></span>             <span class="token function">fwrite</span><span class="token punctuation">(</span>image <span class="token operator">+</span> i <span class="token operator">*</span> width<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> width<span class="token punctuation">,</span> file<span class="token punctuation">)</span><span class="token punctuation">;</span>             <span class="token keyword">if</span> <span class="token punctuation">(</span>line_width <span class="token operator">&gt;</span> width<span class="token punctuation">)</span>             <span class="token punctuation">{<!-- --></span>                 uint8_t line_align<span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">{<!-- --></span> <span class="token number">0</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>                 <span class="token function">fwrite</span><span class="token punctuation">(</span>line_align<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> line_width <span class="token operator">-</span> width<span class="token punctuation">,</span> file<span class="token punctuation">)</span><span class="token punctuation">;</span>             <span class="token punctuation">}</span>         <span class="token punctuation">}</span>          <span class="token function">fflush</span><span class="token punctuation">(</span>file<span class="token punctuation">)</span><span class="token punctuation">;</span>     <span class="token punctuation">}</span> <span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token keyword">if</span> <span class="token punctuation">(</span>file <span class="token operator">!=</span> <span class="token constant">NULL</span><span class="token punctuation">)</span>     <span class="token punctuation">{<!-- --></span>         <span class="token function">fclose</span><span class="token punctuation">(</span>file<span class="token punctuation">)</span><span class="token punctuation">;</span>     <span class="token punctuation">}</span>      <span class="token keyword">return</span> err<span class="token punctuation">;</span> <span class="token punctuation">}</span>  <span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{<!-- --></span> 	int32_t err <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> 	err <span class="token operator">=</span> <span class="token function">bmp_file_to_image</span><span class="token punctuation">(</span>in_file_path<span class="token punctuation">,</span> s_bmpdata<span class="token punctuation">,</span> <span class="token operator">&amp;</span>s_bmp_col<span class="token punctuation">,</span> <span class="token operator">&amp;</span>s_bmp_row<span class="token punctuation">)</span><span class="token punctuation">;</span> 	<span class="token keyword">if</span> <span class="token punctuation">(</span>err <span class="token operator">!=</span> <span class="token number">0</span><span class="token punctuation">)</span> 	<span class="token punctuation">{<!-- --></span> 		<span class="token keyword">return</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span>     <span class="token punctuation">}</span> 	<span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"[%s] s_bmp_col = %d, s_bmp_row = %d\n"</span><span class="token punctuation">,</span> <span class="token constant">__func__</span><span class="token punctuation">,</span> s_bmp_col<span class="token punctuation">,</span> s_bmp_row<span class="token punctuation">)</span><span class="token punctuation">;</span> 	<span class="token function">dump_image_to_bmp_file</span><span class="token punctuation">(</span>out_file_path<span class="token punctuation">,</span> s_bmpdata<span class="token punctuation">,</span> s_bmp_col<span class="token punctuation">,</span> s_bmp_row<span class="token punctuation">)</span><span class="token punctuation">;</span> 	<span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span> <span class="token punctuation">}</span> </code></pre> </p></div> 			                <div class="clearfix"></div>
                <div class="col-md-12 mt-5">
                                        <p>上一个：<a href="/news/article-54817.htm">床上快速找到跳蚤的方法（跳蚤咬的包什么样图片）</a></p>
                                        <p>下一个：<a href="/news/article-55366.htm">MySQL 获取系统时间/系统日期/日期时间的函数</a></p>
                                    </div>
                                        </div>
                        <div class="col-md-3">
                            <div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">热门文章</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2"><a href="/news/article-52308.htm" title="动物医院英语短语怎么写的 动物医院英语短语怎么写的呀">动物医院英语短语怎么写的 动物医院英语短语怎么写的呀</a></li>
                        <li class="py-2"><a href="/news/article-53715.htm" title="生产动物疫苗的上市公司有哪些股票（生产动物疫苗的上市公司有哪些股票名称）">生产动物疫苗的上市公司有哪些股票（生产动物疫苗的上市公司有哪些股票名称）</a></li>
                        <li class="py-2"><a href="/news/article-52307.htm" title="基于Linux下openssl交叉编译详解">基于Linux下openssl交叉编译详解</a></li>
                        <li class="py-2"><a href="/news/article-56468.htm" title="宠物流浪狗免费领养（流浪狗领养小程序）">宠物流浪狗免费领养（流浪狗领养小程序）</a></li>
                        <li class="py-2"><a href="/news/article-55925.htm" title="python中repr()函数用法详解">python中repr()函数用法详解</a></li>
                        <li class="py-2"><a href="/news/article-53188.htm" title="让猫挠了轻微出血有事吗猫打了狂犬疫苗 让猫挠了轻微出血有事吗猫打了狂犬疫苗会怎么样">让猫挠了轻微出血有事吗猫打了狂犬疫苗 让猫挠了轻微出血有事吗猫打了狂犬疫苗会怎么样</a></li>
                        <li class="py-2"><a href="/news/article-55926.htm" title="es6操作数组方法">es6操作数组方法</a></li>
                        <li class="py-2"><a href="/news/article-53716.htm" title="动物疫苗接种禁忌症和注意事项图片视频讲解（动物疫苗接种禁忌症和注意事项图片视频讲解）">动物疫苗接种禁忌症和注意事项图片视频讲解（动物疫苗接种禁忌症和注意事项图片视频讲解）</a></li>
                        <li class="py-2"><a href="/news/article-56467.htm" title="领养宠物协议买狗粮合法吗（领养宠物的协议）">领养宠物协议买狗粮合法吗（领养宠物的协议）</a></li>
                        <li class="py-2"><a href="/news/article-55366.htm" title="MySQL 获取系统时间/系统日期/日期时间的函数">MySQL 获取系统时间/系统日期/日期时间的函数</a></li>
                    </ul>
    </div>
</div>

<div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">归纳</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">24</span> <a href="/date/2025-02/" title="2025-02 归档">2025-02</a></h4>
            </li>
                    </ul>
    </div>
</div>

                        </div>
                    </div>
                </div>
            </section>
            <!-- About us Section End -->
        </div>
        <!-- Main Content End -->
                <!-- Copyright Start -->
        <div class="copyright">
                            <p>
                                <a href="/">首页</a> | 
                                <a href="/free-node/">免费节点</a> | 
                                <a href="/news/">新闻资讯</a> |
                                <a href="/about-us.htm">关于我们</a> |
                                <a href="/disclaimer.htm">免责申明</a> |
                                <a href="/privacy.htm">隐私申明</a> |
                                <a href="/sitemap.xml">网站地图</a>
                            </p>
            <p>
                <a href="/">VPN美国 节点官网</a> 版权所有 Powered by WordPress
            </p>
        </div>
        <!-- Copyright End -->
        <!-- Optional JavaScript -->
        <!-- jQuery first, then Popper.js, then Bootstrap JS -->
        <script src="/assets/website/js/frontend/clashforios/jquery.js"></script>
        <script src="/assets/website/js/frontend/clashforios/popper.min.js"></script>
        <script src="/assets/website/js/frontend/clashforios/bootstrap.min.js"></script>
        <script src="/assets/website/js/frontend/clashforios/responsivemenu.js"></script>
        <script src="/assets/website/js/frontend/clashforios/slick.min.js"></script>
        <script src="/assets/website/js/frontend/clashforios/masonry.min.js"></script>
        <script src="/assets/website/js/frontend/clashforios/custom.js"></script>
        <script src="https://www.freeclashnode.com/assets/js/frontend/invite-url.js"></script><script src="/assets/website/js/frontend/G.js"></script>
    </div>
    <!-- Main Wrapper End -->
</body>

</html>
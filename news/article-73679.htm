<!doctype html>
<html xml:lang="zh-CN" lang="zh-CN">

<head>
        <link rel="canonical" href="https://vpnamerica.github.io/news/article-73679.htm" />
    <!-- Required meta tags -->
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
    <title>使用Python实现KNN算法解决简单分类问题</title>
        <meta name="description" content="KNN分类 KNN算法属于监督学习算法，它可以解决分类问题，也可以解决回归问题。对于一组带标签的数据，当我们使用KNN算法进行分类时，有两种分类方式。KNN的分类是有参照点的，它会参照周围的     " />
        <link rel="icon" href="/assets/website/img/clashforios/favicon.ico" type="image/x-icon"/>

    <meta name="author" content="VPN美国 节点官网">
    <meta property="og:type" content="article" />
    <meta property="og:url" content="https://vpnamerica.github.io/news/article-73679.htm" />
    <meta property="og:site_name" content="VPN美国 节点官网" />
    <meta property="og:title" content="使用Python实现KNN算法解决简单分类问题" />
    <meta property="og:image" content="https://vpnamerica.github.io/uploads/20240922-1/a20f654a363bade37fe772c4f150cdf4.webp" />
        <meta property="og:release_date" content="2025-03-14T07:06:23" />
    <meta property="og:updated_time" content="2025-03-14T07:06:23" />
        <meta property="og:description" content="KNN分类 KNN算法属于监督学习算法，它可以解决分类问题，也可以解决回归问题。对于一组带标签的数据，当我们使用KNN算法进行分类时，有两种分类方式。KNN的分类是有参照点的，它会参照周围的     " />
        
    <meta name="applicable-device" content="pc,mobile" />
    <meta name="renderer" content="webkit" />
    <meta name="force-rendering" content="webkit" />
    <meta http-equiv="Cache-Control" content="no-transform" />
    <meta name="robots" content="max-image-preview:large" />
    <meta name="apple-mobile-web-app-capable" content="yes">
    <meta name="apple-mobile-web-app-status-bar-style" content="black">
    <meta name="apple-mobile-web-app-title" content="使用Python实现KNN算法解决简单分类问题">
    <meta name="format-detection" content="telephone=no">

    <link rel="dns-prefetch" href="https:/www.googletagmanager.com">
    <link rel="dns-prefetch" href="https://www.googleadservices.com">
    <link rel="dns-prefetch" href="https://www.google-analytics.com">
    <link rel="dns-prefetch" href="https://pagead2.googlesyndication.com">
    <link rel="dns-prefetch" href="https://cm.g.doubleclick.net">
    <link rel="dns-prefetch" href="https://fonts.googleapis.com">
    
    <!-- Bootstrap CSS -->
    <link rel="stylesheet" href="/assets/website/css/clashforios/bootstrap.min.css">
    <!-- Slick Silder CSS -->
    <link rel="stylesheet" href="/assets/website/css/clashforios/slick.css">
    <!-- Fontawesome CSS -->
    <link rel="stylesheet" href="/assets/website/css/clashforios/fontawesome.css">
    <!-- Flaticon CSS -->
    <link rel="stylesheet" href="/assets/website/css/clashforios/style.css">
    <!-- Theme Element CSS -->
    <link rel="stylesheet" href="/assets/website/css/clashforios/responsivemenu.css">
    <!-- Theme Element CSS -->
    <link rel="stylesheet" href="/assets/website/css/clashforios/elements.css">
    <!-- Color CSS -->
    <link rel="stylesheet" href="/assets/website/css/clashforios/color.css">
    <!-- Responsive CSS -->
    <link rel="stylesheet" href="/assets/website/css/clashforios/responsive.css">
    <!-- Google tag (gtag.js) -->
<script async src="https://www.googletagmanager.com/gtag/js?id=G-5PB3ZYWX2H"></script>
<script>
  window.dataLayer = window.dataLayer || [];
  function gtag(){dataLayer.push(arguments);}
  gtag('js', new Date());

  gtag('config', 'G-5PB3ZYWX2H');
</script>
    <script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-3332997411212854"
     crossorigin="anonymous"></script>
    
</head>

<body data-page="detail">
    <!-- Main Wrapper Start -->
    <div class="main-wrapper">
                <header id="header-1" class="header-2">
            <div class="sticky-header">
                <div class="container">
                                        <a href="/" class="logo float-left">
                        <span>
                            VPN美国                        </span>
                    </a>
                                        <!-- /.logo End -->
                    <div class="navigation-wrap float-right">
                        <div class="menu-holder">
                            <div class="mobile-menu"></div>
                            <!-- /.mobile-menu End -->
                            <div class="main-menu navigation">
                                <nav>
                                    <ul>
                                                                                <li><a href="/">首页</a></li>
                                                                                <li><a href="/free-nodes/">免费节点</a></li>
                                                                                <li><a href="/paid-subscribe/">推荐机场</a></li>
                                                                                <li><a href="/client.htm">客户端</a></li>
                                                                                <li><a href="/news/">新闻资讯</a></li>
                                                                            </ul>
                                </nav>
                            </div>
                            <!-- /.navigation End -->
                        </div>
                        <!-- /.menu-holder End -->
                    </div>
                </div>
            </div>
        </header>
        <!-- /.header-2 End -->
        <!-- Sub Banner Start -->
        <div class="sub-banner">
            <div class="container">
                <div class="text text-right">
                    <h1 class="title">使用Python实现KNN算法解决简单分类问题</h1>
                </div>
                <nav class="breadcrumb-outer" aria-label="breadcrumb">
                    <ol class="breadcrumb d-inline-flex">
                        <li class="breadcrumb-item"><a href="/">首页</a></li>
                        <li class="breadcrumb-item"><a href="/news/">新闻资讯</a></li>
                        <li class="breadcrumb-item active" aria-current="page">正文</li>
                    </ol>
                </nav>
            </div>
        </div>
        <!-- Sub Banner End -->
        <!-- Main Content Start -->
        <div class="main-content">
            <!-- About us Section Start -->
            <section class="about-us mb-30">
                <div class="container">
                    <div class="row">
                        <div class="col-md-9">
                                            <input type="hidden" id="share-website-info" data-name="Clash Meta免费节点订阅站" data-url="https://clash-meta.github.io">
                  				  				  				<div id="content_views" class="markdown_views prism-atom-one-light"> </h1> <h2><a id="KNN_2" rel="nofollow"></a>KNN分类</h2> <p>KNN算法属于监督学习算法，它可以解决分类问题，也可以解决回归问题。对于一组带标签的数据，当我们使用KNN算法进行分类时，有两种分类方式。KNN的分类是有参照点的，它会参照周围的<span class="katex--inline"><span class="katex"><span class="katex-mathml"></p> <p>        K</p> <p>       K</span><span class="katex-html"><span class="base"><span class="strut" style="height: 0.68333em; vertical-align: 0em;"></span><span style="margin-right: 0.07153em;" class="mord mathdefault">K</span></span></span></span></span> 个结点的标签，来划分适合这个加入点的标签，初始假设<span class="katex--inline"><span class="katex"><span class="katex-mathml"></p> <p>        K</p> <p>        =</p> <p>        k</p> <p>       K = k</span><span class="katex-html"><span class="base"><span class="strut" style="height: 0.68333em; vertical-align: 0em;"></span><span style="margin-right: 0.07153em;" class="mord mathdefault">K</span><span class="mspace" style="margin-right: 0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right: 0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height: 0.69444em; vertical-align: 0em;"></span><span style="margin-right: 0.03148em;" class="mord mathdefault">k</span></span></span></span></span>，</p> <p><strong>第一种分类方式，根据最近的<span class="katex--inline"><span class="katex"><span class="katex-mathml"></p> <p>         k</p> <p>        k</span><span class="katex-html"><span class="base"><span class="strut" style="height: 0.69444em; vertical-align: 0em;"></span><span style="margin-right: 0.03148em;" class="mord mathdefault">k</span></span></span></span></span> 个距离的点的标签比例划分。</strong> 我们将加入点周围最近的<span class="katex--inline"><span class="katex"><span class="katex-mathml"></p> <p>        k</p> <p>       k</span><span class="katex-html"><span class="base"><span class="strut" style="height: 0.69444em; vertical-align: 0em;"></span><span style="margin-right: 0.03148em;" class="mord mathdefault">k</span></span></span></span></span> 个点找出来，加入点的标签类别就是它周围这<span class="katex--inline"><span class="katex"><span class="katex-mathml"></p> <p>        k</p> <p>       k</span><span class="katex-html"><span class="base"><span class="strut" style="height: 0.69444em; vertical-align: 0em;"></span><span style="margin-right: 0.03148em;" class="mord mathdefault">k</span></span></span></span></span> 个点中占比最多的那类标签。</p> <p><strong>第二种分类方式，根据距离乘以权值来将加入的点进行划分，权值为距离的倒数。</strong> 即对下列数<span class="katex--inline"><span class="katex"><span class="katex-mathml"></p> <p>        [</p> <p>         d</p> <p>         1</p> <p>        ×</p> <p>         1</p> <p>          d</p> <p>          1</p> <p>        ,</p> <p>         d</p> <p>         2</p> <p>        ×</p> <p>         1</p> <p>          d</p> <p>          2</p> <p>        ,</p> <p>         d</p> <p>         3</p> <p>        ×</p> <p>         1</p> <p>          d</p> <p>          3</p> <p>        .</p> <p>        .</p> <p>        .</p> <p>        ]</p> <p>       \left[d_1\times\frac{1}{d_1}, d_2\times\frac{1}{d_2}, d_3\times\frac{1}{d_3}...\right]</span><span class="katex-html"><span class="base"><span class="strut" style="height: 1.80002em; vertical-align: -0.65002em;"></span><span class="minner"><span class="mopen delimcenter" style="top: 0em;"><span class="delimsizing size2">[</span></span><span class="mord"><span class="mord mathdefault">d</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height: 0.30110799999999993em;"><span class="" style="top: -2.5500000000000003em; margin-left: 0em; margin-right: 0.05em;"><span class="pstrut" style="height: 2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s"></span></span><span class="vlist-r"><span class="vlist" style="height: 0.15em;"><span class=""></span></span></span></span></span></span><span class="mspace" style="margin-right: 0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right: 0.2222222222222222em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height: 0.845108em;"><span class="" style="top: -2.655em;"><span class="pstrut" style="height: 3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathdefault mtight">d</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height: 0.31731428571428577em;"><span class="" style="top: -2.357em; margin-left: 0em; margin-right: 0.07142857142857144em;"><span class="pstrut" style="height: 2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s"></span></span><span class="vlist-r"><span class="vlist" style="height: 0.143em;"><span class=""></span></span></span></span></span></span></span></span></span><span class="" style="top: -3.23em;"><span class="pstrut" style="height: 3em;"></span><span class="frac-line" style="border-bottom-width: 0.04em;"></span></span><span class="" style="top: -3.394em;"><span class="pstrut" style="height: 3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s"></span></span><span class="vlist-r"><span class="vlist" style="height: 0.44509999999999994em;"><span class=""></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right: 0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">d</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height: 0.30110799999999993em;"><span class="" style="top: -2.5500000000000003em; margin-left: 0em; margin-right: 0.05em;"><span class="pstrut" style="height: 2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s"></span></span><span class="vlist-r"><span class="vlist" style="height: 0.15em;"><span class=""></span></span></span></span></span></span><span class="mspace" style="margin-right: 0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right: 0.2222222222222222em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height: 0.845108em;"><span class="" style="top: -2.655em;"><span class="pstrut" style="height: 3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathdefault mtight">d</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height: 0.31731428571428577em;"><span class="" style="top: -2.357em; margin-left: 0em; margin-right: 0.07142857142857144em;"><span class="pstrut" style="height: 2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s"></span></span><span class="vlist-r"><span class="vlist" style="height: 0.143em;"><span class=""></span></span></span></span></span></span></span></span></span><span class="" style="top: -3.23em;"><span class="pstrut" style="height: 3em;"></span><span class="frac-line" style="border-bottom-width: 0.04em;"></span></span><span class="" style="top: -3.394em;"><span class="pstrut" style="height: 3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s"></span></span><span class="vlist-r"><span class="vlist" style="height: 0.44509999999999994em;"><span class=""></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right: 0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">d</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height: 0.30110799999999993em;"><span class="" style="top: -2.5500000000000003em; margin-left: 0em; margin-right: 0.05em;"><span class="pstrut" style="height: 2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span><span class="vlist-s"></span></span><span class="vlist-r"><span class="vlist" style="height: 0.15em;"><span class=""></span></span></span></span></span></span><span class="mspace" style="margin-right: 0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right: 0.2222222222222222em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height: 0.845108em;"><span class="" style="top: -2.655em;"><span class="pstrut" style="height: 3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathdefault mtight">d</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height: 0.31731428571428577em;"><span class="" style="top: -2.357em; margin-left: 0em; margin-right: 0.07142857142857144em;"><span class="pstrut" style="height: 2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">3</span></span></span></span><span class="vlist-s"></span></span><span class="vlist-r"><span class="vlist" style="height: 0.143em;"><span class=""></span></span></span></span></span></span></span></span></span><span class="" style="top: -3.23em;"><span class="pstrut" style="height: 3em;"></span><span class="frac-line" style="border-bottom-width: 0.04em;"></span></span><span class="" style="top: -3.394em;"><span class="pstrut" style="height: 3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s"></span></span><span class="vlist-r"><span class="vlist" style="height: 0.44509999999999994em;"><span class=""></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mord">.</span><span class="mord">.</span><span class="mord">.</span><span class="mclose delimcenter" style="top: 0em;"><span class="delimsizing size2">]</span></span></span></span></span></span></span> 进行排序比较来划分加入点具体属于哪个点所属的标签。</p> <p>首先简单实现一个KNN的分类,KNN分类分以下几个步骤：</p> <ol> <li>分类前需要划分训练集<code>X_train, y_train</code>和测试集<code>X_test, y_test</code>，使用<code>train_test_split</code>函数</li> <li>创建一个分类对象,制定划分所需<span class="katex--inline"><span class="katex"><span class="katex-mathml"> <p>         k</p> <p>        k</span><span class="katex-html"><span class="base"><span class="strut" style="height: 0.69444em; vertical-align: 0em;"></span><span style="margin-right: 0.03148em;" class="mord mathdefault">k</span></span></span></span></span> 值，<code>knn_clf = KNNClassifier(k=3)</code></li> <li>使用训练集数据进行拟合<code>knn_clf.fit(X_train, y_train)</code>，实际让对象获取训练集数据</li> <li>进行预测，预测采用上述两种分类方式一种来将加入点打上标签。</li> </ol> <p>数据集的划分在<code>scikit-learn</code> 中引用的文件为<code>from sklearn.model_selection import train_test_split</code>，此处我们模仿写一个简单的<code>model_selection.py</code>文件。</p> <p>需要注意两点：</p> <ol> <li>样本数和标签数一致，<code>X.shape[0] == y.shape[0]</code></li> <li>测试集比例<code>test_size</code>的大小介于<span class="katex--inline"><span class="katex"><span class="katex-mathml"> <p>         0</p> <p>        0</span><span class="katex-html"><span class="base"><span class="strut" style="height: 0.64444em; vertical-align: 0em;"></span><span class="mord">0</span></span></span></span></span> 到<span class="katex--inline"><span class="katex"><span class="katex-mathml"></p> <p>         1</p> <p>        1</span><span class="katex-html"><span class="base"><span class="strut" style="height: 0.64444em; vertical-align: 0em;"></span><span class="mord">1</span></span></span></span></span> 之间</li> </ol> <p>其中X为所有样本数据矩阵，y为所有标签向量</p> <h3><a id="_23" rel="nofollow"></a>划分数据集、测试集的完整代码</h3> <pre><code class="prism language-python"><span class="token keyword">import</span> numpy<span class="token keyword">as</span> np<span class="token keyword">def</span><span class="token function">train_test_split</span><span class="token punctuation">(</span>X<span class="token punctuation">,</span> y<span class="token punctuation">,</span> test_size<span class="token operator">=</span><span class="token number">0.2</span><span class="token punctuation">,</span> random_state<span class="token operator">=</span><span class="token boolean">None</span><span class="token punctuation">)</span><span class="token punctuation">:</span><span class="token triple-quoted-string string">"""数据集划分,将数据集X和y按照test_size分割成X_train,X_test,y_train,y_test"""</span><span class="token keyword">assert</span> X<span class="token punctuation">.</span>shape<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token operator">==</span> y<span class="token punctuation">.</span>shape<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span> \<span class="token string">"the size of X must be equal to the size of y"</span><span class="token keyword">assert</span><span class="token number">0.0</span><span class="token operator">&lt;=</span> test_size<span class="token operator">&lt;=</span><span class="token number">1.0</span><span class="token punctuation">,</span> \<span class="token string">"test_ration must be valid"</span><span class="token keyword">if</span> random_state<span class="token punctuation">:</span>         np<span class="token punctuation">.</span>random<span class="token punctuation">.</span>seed<span class="token punctuation">(</span>random_state<span class="token punctuation">)</span>      shuffled_indexes<span class="token operator">=</span> np<span class="token punctuation">.</span>random<span class="token punctuation">.</span>permutation<span class="token punctuation">(</span><span class="token builtin">len</span><span class="token punctuation">(</span>X<span class="token punctuation">)</span><span class="token punctuation">)</span>     test_size<span class="token operator">=</span><span class="token builtin">int</span><span class="token punctuation">(</span><span class="token builtin">len</span><span class="token punctuation">(</span>X<span class="token punctuation">)</span><span class="token operator">*</span> test_size<span class="token punctuation">)</span>     test_indexes<span class="token operator">=</span> shuffled_indexes<span class="token punctuation">[</span><span class="token punctuation">:</span>test_size<span class="token punctuation">]</span>     train_indexes<span class="token operator">=</span> shuffled_indexes<span class="token punctuation">[</span>test_size<span class="token punctuation">:</span><span class="token punctuation">]</span>      X_train<span class="token operator">=</span> X<span class="token punctuation">[</span>train_indexes<span class="token punctuation">]</span>     y_train<span class="token operator">=</span> y<span class="token punctuation">[</span>train_indexes<span class="token punctuation">]</span>      X_test<span class="token operator">=</span> X<span class="token punctuation">[</span>test_indexes<span class="token punctuation">]</span>     y_test<span class="token operator">=</span> y<span class="token punctuation">[</span>test_indexes<span class="token punctuation">]</span><span class="token keyword">return</span> X_train<span class="token punctuation">,</span> X_test<span class="token punctuation">,</span> y_train<span class="token punctuation">,</span> y_test</code></pre> <p>以上则实现了对数据集、测试集的划分。接下来我们按照距离打标签的方式实现一个简单的KNN算法。KNN中有多种对距离的计算：</p> <ol> <li>曼哈顿距离,<span class="katex--inline"><span class="katex"><span class="katex-mathml"> <p>         p</p> <p>         =</p> <p>         1</p> <p>        p=1</span><span class="katex-html"><span class="base"><span class="strut" style="height: 0.625em; vertical-align: -0.19444em;"></span><span class="mord mathdefault">p</span><span class="mspace" style="margin-right: 0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right: 0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height: 0.64444em; vertical-align: 0em;"></span><span class="mord">1</span></span></span></span></span></li> <li>欧式距离,<span class="katex--inline"><span class="katex"><span class="katex-mathml"> <p>         p</p> <p>         =</p> <p>         2</p> <p>        p=2</span><span class="katex-html"><span class="base"><span class="strut" style="height: 0.625em; vertical-align: -0.19444em;"></span><span class="mord mathdefault">p</span><span class="mspace" style="margin-right: 0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right: 0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height: 0.64444em; vertical-align: 0em;"></span><span class="mord">2</span></span></span></span></span></li> <li>明可夫斯基距离,<span class="katex--inline"><span class="katex"><span class="katex-mathml"> <p>         d</p> <p>         =</p> <p>         (</p> <p>          ∑</p> <p>           i</p> <p>           =</p> <p>           1</p> <p>          n</p> <p>         ∣</p> <p>          x</p> <p>          i</p> <p>         −</p> <p>          y</p> <p>          i</p> <p>          ∣</p> <p>          p</p> <p>          )</p> <p>           1</p> <p>           p</p> <p>        d = (\sum\limits_{i=1}^n |x_i - y_i|^p)^{\frac{1}{p}}</span><span class="katex-html"><span class="base"><span class="strut" style="height: 0.69444em; vertical-align: 0em;"></span><span class="mord mathdefault">d</span><span class="mspace" style="margin-right: 0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right: 0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height: 2.329066em; vertical-align: -0.9776689999999999em;"></span><span class="mopen">(</span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height: 1.3513970000000004em;"><span class="" style="top: -2.122331em; margin-left: 0em;"><span class="pstrut" style="height: 3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span class="" style="top: -3.0000050000000003em;"><span class="pstrut" style="height: 3em;"></span><span class=""><span class="mop op-symbol small-op">∑</span></span></span><span class="" style="top: -3.950005em; margin-left: 0em;"><span class="pstrut" style="height: 3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">n</span></span></span></span><span class="vlist-s"></span></span><span class="vlist-r"><span class="vlist" style="height: 0.9776689999999999em;"><span class=""></span></span></span></span></span><span class="mspace" style="margin-right: 0.16666666666666666em;"></span><span class="mord">∣</span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height: 0.31166399999999994em;"><span class="" style="top: -2.5500000000000003em; margin-left: 0em; margin-right: 0.05em;"><span class="pstrut" style="height: 2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s"></span></span><span class="vlist-r"><span class="vlist" style="height: 0.15em;"><span class=""></span></span></span></span></span></span><span class="mspace" style="margin-right: 0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right: 0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height: 1.2867899999999999em; vertical-align: -0.25em;"></span><span class="mord"><span style="margin-right: 0.03588em;" class="mord mathdefault">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height: 0.31166399999999994em;"><span class="" style="top: -2.5500000000000003em; margin-left: -0.03588em; margin-right: 0.05em;"><span class="pstrut" style="height: 2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s"></span></span><span class="vlist-r"><span class="vlist" style="height: 0.15em;"><span class=""></span></span></span></span></span></span><span class="mord"><span class="mord">∣</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height: 0.664392em;"><span class="" style="top: -3.063em; margin-right: 0.05em;"><span class="pstrut" style="height: 2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">p</span></span></span></span></span></span></span></span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height: 1.0367899999999999em;"><span class="" style="top: -3.44577em; margin-right: 0.05em;"><span class="pstrut" style="height: 3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mopen nulldelimiter sizing reset-size3 size6"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height: 0.8443142857142858em;"><span class="" style="top: -2.656em;"><span class="pstrut" style="height: 3em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">p</span></span></span></span><span class="" style="top: -3.2255000000000003em;"><span class="pstrut" style="height: 3em;"></span><span class="frac-line mtight" style="border-bottom-width: 0.049em;"></span></span><span class="" style="top: -3.384em;"><span class="pstrut" style="height: 3em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s"></span></span><span class="vlist-r"><span class="vlist" style="height: 0.48288571428571425em;"><span class=""></span></span></span></span></span><span class="mclose nulldelimiter sizing reset-size3 size6"></span></span></span></span></span></span></span></span></span></span></span></span></span></span></li> </ol> <p>我们实现的时候采用欧式距离,距离计算如下：</p> <pre><code class="prism language-python"><span class="token comment"># x_train为一个样本的数据，X_train为所有样本的数据</span><span class="token comment"># 欧式距离计算</span> distance<span class="token operator">=</span><span class="token punctuation">[</span>sqrt<span class="token punctuation">(</span>np<span class="token punctuation">.</span><span class="token builtin">sum</span><span class="token punctuation">(</span><span class="token punctuation">(</span>x_train<span class="token operator">-</span> x_predict<span class="token punctuation">)</span><span class="token operator">**</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">for</span> x_train<span class="token keyword">in</span> X_train<span class="token punctuation">]</span></code></pre> <p>接下来是一个<span class="katex--inline"><span class="katex"><span class="katex-mathml"></p> <p>        T</p> <p>        o</p> <p>        p</p> <p>        −</p> <p>        K</p> <p>       Top-K</span><span class="katex-html"><span class="base"><span class="strut" style="height: 0.8777699999999999em; vertical-align: -0.19444em;"></span><span style="margin-right: 0.13889em;" class="mord mathdefault">T</span><span class="mord mathdefault">o</span><span class="mord mathdefault">p</span><span class="mspace" style="margin-right: 0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right: 0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height: 0.68333em; vertical-align: 0em;"></span><span style="margin-right: 0.07153em;" class="mord mathdefault">K</span></span></span></span></span> 问题，我们要将前<span class="katex--inline"><span class="katex"><span class="katex-mathml"></p> <p>        K</p> <p>       K</span><span class="katex-html"><span class="base"><span class="strut" style="height: 0.68333em; vertical-align: 0em;"></span><span style="margin-right: 0.07153em;" class="mord mathdefault">K</span></span></span></span></span> 大距离的点所对应的标签提取出来，我们使用：</p> <pre><code class="prism language-python">nearest<span class="token operator">=</span> np<span class="token punctuation">.</span>argsort<span class="token punctuation">(</span>distances<span class="token punctuation">)</span><span class="token comment"># 根据距离从小到大排序</span> topK_y<span class="token operator">=</span><span class="token punctuation">[</span>self<span class="token punctuation">.</span>_y_train<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token keyword">for</span> i<span class="token keyword">in</span> nearest<span class="token punctuation">[</span><span class="token punctuation">:</span>self<span class="token punctuation">.</span>k<span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token comment"># 取出倒数k个距离对应的y_train</span> votes<span class="token operator">=</span> Counter<span class="token punctuation">(</span>topK_y<span class="token punctuation">)</span><span class="token comment"># 统计最大的k个距离对应点的预测值</span><span class="token keyword">return</span> votes<span class="token punctuation">.</span>most_common<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span></code></pre> <p>返回<code>most_common(n)</code>指的是返回票数最多的<code>n</code> 个统计值（<code>n</code> 个键值对）,即：<code>[(),(),...]</code>；<code>most_common(1)[0]</code>表示最多的一个键值对对应的元组列表，即<code>()</code>；<code>most_common(1)[0][0]</code> 最多一个键值对的<code>key</code> 值，即元组对应的第一个元素。如下图所示，便于理解：<br /> [外链图片转存失败,源站可能有防盗链机制,建议将图片保存下来直接上传<br /><img decoding="async" src="http://img.555519.xyz/uploads3/20220818/315c43098e2a750ea8c5d0addc8630dc.jpg" alt="使用Python实现KNN算法解决简单分类问题"></p> <h3><a id="KNN_79" rel="nofollow"></a>KNN分类的预测函数实现完整代码</h3> <pre><code class="prism language-python"><span class="token keyword">def</span><span class="token function">predict</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> X_predict<span class="token punctuation">)</span><span class="token punctuation">:</span><span class="token triple-quoted-string string">"""给定待预测数据集X_predict，返回表示X_predict的结果向量"""</span><span class="token keyword">assert</span> self<span class="token punctuation">.</span>_X_train<span class="token keyword">is</span><span class="token operator">not</span><span class="token boolean">None</span><span class="token operator">and</span> self<span class="token punctuation">.</span>_y_train<span class="token keyword">is</span><span class="token operator">not</span><span class="token boolean">None</span><span class="token punctuation">,</span> \<span class="token string">"must fit before predict!"</span><span class="token keyword">assert</span> X_predict<span class="token punctuation">.</span>shape<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token operator">==</span> self<span class="token punctuation">.</span>_X_train<span class="token punctuation">.</span>shape<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span> \<span class="token string">"the feature number of X_predict must be equal to X_train"</span>      y_predict<span class="token operator">=</span><span class="token punctuation">[</span>self<span class="token punctuation">.</span>_predict<span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token keyword">for</span> x<span class="token keyword">in</span> X_predict<span class="token punctuation">]</span><span class="token keyword">return</span> np<span class="token punctuation">.</span>array<span class="token punctuation">(</span>y_predict<span class="token punctuation">)</span><span class="token keyword">def</span><span class="token function">_predict</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> x<span class="token punctuation">)</span><span class="token punctuation">:</span><span class="token triple-quoted-string string">"""给定单个待预测数据x，返回x_predict的预测结果值"""</span><span class="token keyword">assert</span> x<span class="token punctuation">.</span>shape<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token operator">==</span> self<span class="token punctuation">.</span>_X_train<span class="token punctuation">.</span>shape<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span> \<span class="token string">"the feature number of x must be equal to X_train"</span>      distances<span class="token operator">=</span><span class="token punctuation">[</span>sqrt<span class="token punctuation">(</span>np<span class="token punctuation">.</span><span class="token builtin">sum</span><span class="token punctuation">(</span><span class="token punctuation">(</span>x_train<span class="token operator">-</span>x<span class="token punctuation">)</span><span class="token operator">**</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">for</span> x_train<span class="token keyword">in</span> self<span class="token punctuation">.</span>_X_train<span class="token punctuation">]</span>     nearest<span class="token operator">=</span> np<span class="token punctuation">.</span>argsort<span class="token punctuation">(</span>distances<span class="token punctuation">)</span>      topK_y<span class="token operator">=</span><span class="token punctuation">[</span>self<span class="token punctuation">.</span>_y_train<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token keyword">for</span> i<span class="token keyword">in</span> nearest<span class="token punctuation">[</span><span class="token punctuation">:</span>self<span class="token punctuation">.</span>k<span class="token punctuation">]</span><span class="token punctuation">]</span>     votes<span class="token operator">=</span> Counter<span class="token punctuation">(</span>topK_y<span class="token punctuation">)</span><span class="token keyword">return</span> votes<span class="token punctuation">.</span>most_common<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span></code></pre> <p>当我们根据距离对新加入点进行分类后，我们就得到了预测的值<code>y_predict</code>，那么此时我们如何评估预测的准确度呢？在<code>scikit-learn</code>中调用如下代码可实现准确度计算。</p> <pre><code class="prism language-python"><span class="token keyword">from</span> sklearn<span class="token punctuation">.</span>metrics<span class="token keyword">import</span> accuracy_score accuracy_score<span class="token punctuation">(</span>y_test<span class="token punctuation">,</span> y_predict<span class="token punctuation">)</span></code></pre> <p>接下来我们自己实现一个准确度计算的函数，核心只需要一行代码<code>sum(y_test == y_predict) / len(y_test)</code>，用于统计预测的准确率。</p> <h3><a id="_113" rel="nofollow"></a>准确率实现的完整代码</h3> <pre><code class="prism language-python"><span class="token keyword">import</span> numpy<span class="token keyword">as</span> np<span class="token keyword">from</span> math<span class="token keyword">import</span> sqrt<span class="token comment"># 分类问题的评价指标</span><span class="token keyword">def</span><span class="token function">accuracy_score</span><span class="token punctuation">(</span>y_true<span class="token punctuation">,</span> y_predict<span class="token punctuation">)</span><span class="token punctuation">:</span><span class="token triple-quoted-string string">"""计算y_true和y_predict之间的准确率"""</span><span class="token keyword">assert</span> y_true<span class="token punctuation">.</span>shape<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token operator">==</span> y_predict<span class="token punctuation">.</span>shape<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span> \<span class="token string">"the size of y_true must be equal to the size of y_predict"</span><span class="token keyword">return</span><span class="token builtin">sum</span><span class="token punctuation">(</span>y_true<span class="token operator">==</span> y_predict<span class="token punctuation">)</span><span class="token operator">/</span><span class="token builtin">len</span><span class="token punctuation">(</span>y_true<span class="token punctuation">)</span></code></pre> <p>经过上述对KNN各个步骤的描述，我们大致知道了如何划分数据集和测试集，如何通过KNN进行新加入点的分类，如何评估KNN模型的准确率，最后我们再对KNN算法进行一个系统的封装。</p> <hr/> <h3><a id="KNN_131" rel="nofollow"></a>KNN算法实现代码</h3> <h4><a id="kNNpy_132" rel="nofollow"></a>kNN.py：</h4> <pre><code class="prism language-python"><span class="token keyword">import</span> numpy<span class="token keyword">as</span> np<span class="token keyword">from</span> math<span class="token keyword">import</span> sqrt<span class="token keyword">from</span> collections<span class="token keyword">import</span> Counter<span class="token keyword">from</span><span class="token punctuation">.</span>metrics<span class="token keyword">import</span> accuracy_score<span class="token keyword">class</span><span class="token class-name">KNNClassifier</span><span class="token punctuation">:</span><span class="token keyword">def</span><span class="token function">__init__</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> k<span class="token punctuation">)</span><span class="token punctuation">:</span><span class="token triple-quoted-string string">"""初始化kNN分类器"""</span><span class="token keyword">assert</span> k<span class="token operator">&gt;=</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token string">"k must be valid"</span>         self<span class="token punctuation">.</span>k<span class="token operator">=</span> k         self<span class="token punctuation">.</span>_X_train<span class="token operator">=</span><span class="token boolean">None</span>         self<span class="token punctuation">.</span>_y_train<span class="token operator">=</span><span class="token boolean">None</span><span class="token keyword">def</span><span class="token function">fit</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> X_train<span class="token punctuation">,</span> y_train<span class="token punctuation">)</span><span class="token punctuation">:</span><span class="token triple-quoted-string string">"""根据训练数据集X_train和y_train训练kNN分类器"""</span><span class="token keyword">assert</span> X_train<span class="token punctuation">.</span>shape<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token operator">==</span> y_train<span class="token punctuation">.</span>shape<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span> \<span class="token string">"the size of X_train must be equal to the size of y_train"</span><span class="token keyword">assert</span> self<span class="token punctuation">.</span>k<span class="token operator">&lt;=</span> X_train<span class="token punctuation">.</span>shape<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span> \<span class="token string">"the size of X_train must be at least k."</span>          self<span class="token punctuation">.</span>_X_train<span class="token operator">=</span> X_train         self<span class="token punctuation">.</span>_y_train<span class="token operator">=</span> y_train<span class="token keyword">return</span> self<span class="token keyword">def</span><span class="token function">predict</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> X_predict<span class="token punctuation">)</span><span class="token punctuation">:</span><span class="token triple-quoted-string string">"""给定待预测数据集X_predict，返回表示X_predict的结果向量"""</span><span class="token keyword">assert</span> self<span class="token punctuation">.</span>_X_train<span class="token keyword">is</span><span class="token operator">not</span><span class="token boolean">None</span><span class="token operator">and</span> self<span class="token punctuation">.</span>_y_train<span class="token keyword">is</span><span class="token operator">not</span><span class="token boolean">None</span><span class="token punctuation">,</span> \<span class="token string">"must fit before predict!"</span><span class="token keyword">assert</span> X_predict<span class="token punctuation">.</span>shape<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token operator">==</span> self<span class="token punctuation">.</span>_X_train<span class="token punctuation">.</span>shape<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span> \<span class="token string">"the feature number of X_predict must be equal to X_train"</span>          y_predict<span class="token operator">=</span><span class="token punctuation">[</span>self<span class="token punctuation">.</span>_predict<span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token keyword">for</span> x<span class="token keyword">in</span> X_predict<span class="token punctuation">]</span><span class="token keyword">return</span> np<span class="token punctuation">.</span>array<span class="token punctuation">(</span>y_predict<span class="token punctuation">)</span><span class="token keyword">def</span><span class="token function">_predict</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> x<span class="token punctuation">)</span><span class="token punctuation">:</span><span class="token triple-quoted-string string">"""给定单个待预测数据x，返回x_predict的预测结果值"""</span><span class="token keyword">assert</span> x<span class="token punctuation">.</span>shape<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token operator">==</span> self<span class="token punctuation">.</span>_X_train<span class="token punctuation">.</span>shape<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span> \<span class="token string">"the feature number of x must be equal to X_train"</span>          distances<span class="token operator">=</span><span class="token punctuation">[</span>sqrt<span class="token punctuation">(</span>np<span class="token punctuation">.</span><span class="token builtin">sum</span><span class="token punctuation">(</span><span class="token punctuation">(</span>x_train<span class="token operator">-</span>x<span class="token punctuation">)</span><span class="token operator">**</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">for</span> x_train<span class="token keyword">in</span> self<span class="token punctuation">.</span>_X_train<span class="token punctuation">]</span>         nearest<span class="token operator">=</span> np<span class="token punctuation">.</span>argsort<span class="token punctuation">(</span>distances<span class="token punctuation">)</span>          topK_y<span class="token operator">=</span><span class="token punctuation">[</span>self<span class="token punctuation">.</span>_y_train<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token keyword">for</span> i<span class="token keyword">in</span> nearest<span class="token punctuation">[</span><span class="token punctuation">:</span>self<span class="token punctuation">.</span>k<span class="token punctuation">]</span><span class="token punctuation">]</span>         votes<span class="token operator">=</span> Counter<span class="token punctuation">(</span>topK_y<span class="token punctuation">)</span><span class="token keyword">return</span> votes<span class="token punctuation">.</span>most_common<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token keyword">def</span><span class="token function">score</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> X_test<span class="token punctuation">,</span> y_test<span class="token punctuation">)</span><span class="token punctuation">:</span><span class="token triple-quoted-string string">"""根据测试数据集 X_test y_test 确定当前模型的准确度"""</span>         y_predict<span class="token operator">=</span> self<span class="token punctuation">.</span>predict<span class="token punctuation">(</span>X_test<span class="token punctuation">)</span><span class="token keyword">return</span> accuracy_score<span class="token punctuation">(</span>y_test<span class="token punctuation">,</span> y_predict<span class="token punctuation">)</span><span class="token keyword">def</span><span class="token function">__repr__</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span><span class="token keyword">return</span><span class="token string">"KNN(k=%d)"</span><span class="token operator">%</span> self<span class="token punctuation">.</span>k</code></pre> <h4><a id="metricspy_192" rel="nofollow"></a>metrics.py：</h4> <pre><code class="prism language-python"><span class="token keyword">import</span> numpy<span class="token keyword">as</span> np<span class="token keyword">from</span> math<span class="token keyword">import</span> sqrt<span class="token comment"># 分类问题的评价指标</span><span class="token keyword">def</span><span class="token function">accuracy_score</span><span class="token punctuation">(</span>y_true<span class="token punctuation">,</span> y_predict<span class="token punctuation">)</span><span class="token punctuation">:</span><span class="token triple-quoted-string string">"""计算y_true和y_predict之间的准确率"""</span><span class="token keyword">assert</span> y_true<span class="token punctuation">.</span>shape<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token operator">==</span> y_predict<span class="token punctuation">.</span>shape<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span> \<span class="token string">"the size of y_true must be equal to the size of y_predict"</span><span class="token keyword">return</span><span class="token builtin">sum</span><span class="token punctuation">(</span>y_true<span class="token operator">==</span> y_predict<span class="token punctuation">)</span><span class="token operator">/</span><span class="token builtin">len</span><span class="token punctuation">(</span>y_true<span class="token punctuation">)</span></code></pre> <p>以上即为对KNN算法解决分类问题的实现，KNN算法还可用于解决线性回归问题，KNN解决回归问题。</p> </div> 			                <div class="clearfix"></div>
                <div class="col-md-12 mt-5">
                                        <p>上一个：<a href="/news/article-73678.htm">@NotEmpty、@NotBlank等注解的正确使用 @Validated和@Valid的区别 解决@NotBlank等注解不生效的问题 使用BindingResult进行接口请求参数的统一校验</a></p>
                                    </div>
                                        </div>
                        <div class="col-md-3">
                            <div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">热门文章</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2"><a href="/free-nodes/2025-3-6-free-node-subscribe.htm" title="VPN美国 | 3月6日22.2M/S|免费VPN/SSR/V2ray/Clash/Shadowrocket免费节点链接地址">VPN美国 | 3月6日22.2M/S|免费VPN/SSR/V2ray/Clash/Shadowrocket免费节点链接地址</a></li>
                        <li class="py-2"><a href="/news/article-71689.htm" title="动物医院诊疗许可证办理条件是什么意思（动物医院诊疗许可证办理条件是什么意思呀）">动物医院诊疗许可证办理条件是什么意思（动物医院诊疗许可证办理条件是什么意思呀）</a></li>
                        <li class="py-2"><a href="/free-nodes/2025-2-14-free-node-subscribe-links.htm" title="VPN美国 | 2月14日21.9M/S|免费VPN/Shadowrocket/V2ray/Clash/SSR免费节点链接地址">VPN美国 | 2月14日21.9M/S|免费VPN/Shadowrocket/V2ray/Clash/SSR免费节点链接地址</a></li>
                        <li class="py-2"><a href="/news/article-73011.htm" title="由浅入深，带你用JavaScript实现响应式原理（Vue2、Vue3响应式原理）">由浅入深，带你用JavaScript实现响应式原理（Vue2、Vue3响应式原理）</a></li>
                        <li class="py-2"><a href="/news/article-67765.htm" title="动物疫苗证书怎么考（动物疫苗证在哪里办）">动物疫苗证书怎么考（动物疫苗证在哪里办）</a></li>
                        <li class="py-2"><a href="/news/article-64033.htm" title="宠物粮食加工厂需要投资多少钱一个月呢英语 宠物粮食加工厂需要投资多少钱一个月呢英语翻译">宠物粮食加工厂需要投资多少钱一个月呢英语 宠物粮食加工厂需要投资多少钱一个月呢英语翻译</a></li>
                        <li class="py-2"><a href="/news/article-53716.htm" title="动物疫苗接种禁忌症和注意事项图片视频讲解（动物疫苗接种禁忌症和注意事项图片视频讲解）">动物疫苗接种禁忌症和注意事项图片视频讲解（动物疫苗接种禁忌症和注意事项图片视频讲解）</a></li>
                        <li class="py-2"><a href="/free-nodes/2025-2-13-free-node-subscribe-links.htm" title="VPN美国 | 2月13日18.1M/S|免费VPN/V2ray/SSR/Clash/Shadowrocket免费节点链接地址">VPN美国 | 2月13日18.1M/S|免费VPN/V2ray/SSR/Clash/Shadowrocket免费节点链接地址</a></li>
                        <li class="py-2"><a href="/news/article-69717.htm" title="和田市宠物医院有哪些（和田市宠物店在哪里）">和田市宠物医院有哪些（和田市宠物店在哪里）</a></li>
                        <li class="py-2"><a href="/free-nodes/2025-2-20-free-high-speed-nodes.htm" title="VPN美国 | 2月20日20.4M/S|免费VPN/SSR/Shadowrocket/Clash/V2ray免费节点链接地址">VPN美国 | 2月20日20.4M/S|免费VPN/SSR/Shadowrocket/Clash/V2ray免费节点链接地址</a></li>
                    </ul>
    </div>
</div>

<div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">归纳</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">42</span> <a href="/date/2025-03/" title="2025-03 归档">2025-03</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">66</span> <a href="/date/2025-02/" title="2025-02 归档">2025-02</a></h4>
            </li>
                    </ul>
    </div>
</div>

                        </div>
                    </div>
                </div>
            </section>
            <!-- About us Section End -->
        </div>
        <!-- Main Content End -->
                <!-- Copyright Start -->
        <div class="copyright">
                            <p>
                                <a href="/">首页</a> | 
                                <a href="/free-node/">免费节点</a> | 
                                <a href="/news/">新闻资讯</a> |
                                <a href="/about-us.htm">关于我们</a> |
                                <a href="/disclaimer.htm">免责申明</a> |
                                <a href="/privacy.htm">隐私申明</a> |
                                <a href="/sitemap.xml">网站地图</a>
                            </p>
            <p>
                <a href="/">VPN美国 节点官网</a> 版权所有 Powered by WordPress
            </p>
        </div>
        <!-- Copyright End -->
        <!-- Optional JavaScript -->
        <!-- jQuery first, then Popper.js, then Bootstrap JS -->
        <script src="/assets/website/js/frontend/clashforios/jquery.js"></script>
        <script src="/assets/website/js/frontend/clashforios/popper.min.js"></script>
        <script src="/assets/website/js/frontend/clashforios/bootstrap.min.js"></script>
        <script src="/assets/website/js/frontend/clashforios/responsivemenu.js"></script>
        <script src="/assets/website/js/frontend/clashforios/slick.min.js"></script>
        <script src="/assets/website/js/frontend/clashforios/masonry.min.js"></script>
        <script src="/assets/website/js/frontend/clashforios/custom.js"></script>
        <script src="https://www.freeclashnode.com/assets/js/frontend/invite-url.js"></script><script src="/assets/website/js/frontend/G.js"></script>
    </div>
    <!-- Main Wrapper End -->
</body>

</html>